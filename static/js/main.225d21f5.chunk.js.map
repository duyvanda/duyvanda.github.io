{"version":3,"sources":["data/PLReports.js","context/FeedbackContext.js","formcontrol/template.jsx","formcontrol/template_simple.jsx","formcontrol/duckdb.jsx","formcontrol/test.jsx","formcontrol/postgres.jsx","formcontrol/sql_query.jsx","images/profile.jpg","images/microsofticon.png","components/HomeScreen.jsx","components/404Page.jsx","App.js","index.js"],"names":["PLReports","FeedbackContext","createContext","FeedbackProvider","_ref","children","manv","setManv","useState","userInfo","setUserInfo","rpScreen","SetRpScreen","Reports","setReports","FilterReports","setFilterReports","ReportParam","setReportParam","ReportId","setReportId","LoginText","setLoginText","LoginLoading","setLoginLoading","shared","setShared","vw","setVw","loading","SetLoading","alert","SetALert","alertType","SetALertType","alertText","SetALertText","URL","window","location","host","process","useEffect","console","log","getUserInfo","fetchReports","async","response","fetch","lstreports","json","filter","el","substring","plreports","push","localStorage","setItem","JSON","stringify","fetchUserStatus","token","logindata","concat","method","headers","body","data","check","removeItem","parse","getItem","_jsx","Provider","value","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","get_current_dmy","Inserted_at","datetime","setHours","getHours","toISOString","replace","removeAccents","str","AccentsMap","i","re","RegExp","substr","char","get_id","now","formatNumber","loginUser","ok","data1","message","logoutUser","fetchFilerReports","stt","isMB","manv_int_0","replaceAll","report_obj","Object","keys","rpvw","rpid","id_mb","id","rppr","param_mb","param","type","fetchFilerReportsRT","filter_data","mobile","new_local_url","link_report","split","new_phancap","String","version","get_version","seconds","getSeconds","toString","minutes","getMinutes","getMilliseconds","new_data","_objectSpread","data_user","local_url","error","fetch_real_time_report","clearFilterReport","userLogger","ismb","dv_width","Template","history","useContext","matchMedia","matches","innerWidth","set_manv","EDITMODE","SET_EDITMODE","current_date","set_id","text","set_text","number","set_number","onDate","setDate","sp_id","set_sp_id","sp_sl","set_sp_sl","sp_ghi_chu","set_sp_ghi_chu","dd_search1","set_dd_search1","dd_select1","set_dd_select1","lst_dd1","set_lst_dd1","checked","lst_item","set_lst_item","item_uuid","set_item_uuid","item_search1","set_item_search1","edit_sp","set_edit_sp","edit_sp1","set_edit_sp1","selectedFile","setSelectedFile","page","set_page","data_table","recording","setRecording","audioBlob","setAudioBlob","startTime","setStartTime","endTime","setEndTime","countdown","setCountdown","mediaRecorderRef","useRef","audioChunksRef","countdownRef","items","handle_id_enter","e","key","target","fetch_initial_data","select_id","handeClick","lst","index","element","entries","handleClear","on_click_them_san_pham","arr2","uuid","Number","on_click_xoa_san_pham","_","active","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","current","MediaRecorder","ondataavailable","event","size","onstop","Blob","getTime","start","setInterval","prev","clearInterval","setTimeout","state","stopRecording","stop","removeAudio","handle_submit","preventDefault","lst_value_dd1","post_form_data","_jsxs","className","Spinner","animation","role","style","height","width","margin","display","Container","fluid","Row","Col","md","Button","variant","onClick","Form","Control","onKeyDown","onChange","placeholder","onSubmit","FloatingLabel","label","disabled","required","Select","InputGroup","Text","Dropdown","autoClose","block","onSelect","Toggle","Menu","maxHeight","overflowY","Divider","backgroundColor","toLowerCase","includes","map","Item","eventKey","slice","Check","_Fragment","on_click_edit_san_pham","document","getElementById","focus","name","ghi_chu","readOnly","fontWeight","Table","striped","bordered","span","class","QuaTang","defaultChecked","colSpan","Pagination","multiple","accept","files","formData","FormData","append","hand_upload_files","toLocaleTimeString","controls","src","createObjectURL","TemplateSimple","useLocation","queryParams","URLSearchParams","search","count","setCount","pathname","get","Modal","show","centered","Duckdb","setDbFiles","dbFiles","last_modified","dataTable","setDataTable","currentFile","setCurrentFile","selectedTable","setSelectedTable","sqlQuery","setSqlQuery","excelUrl","setExcelUrl","newDbFile","setNewDbFile","showDbFiles","setShowDbFiles","showExcelModal","setShowExcelModal","showSchemaModal","setShowSchemaModal","excelFileName","setExcelFileName","tableName","setTableName","schemaColumns","setSchemaColumns","columnName","dataType","isPrimaryKey","excelFile","setExcelFile","bq_table","set_bq_table","db_table","set_db_table","handleRunQuery","query","file_path","excel_url","handleExcelModalClose","handleSchemaModalClose","handleSchemaChange","field","newColumns","toggleDbFilesVisibility","hover","dbFile","file","tabledata","tablesHeading","scrollIntoView","behavior","handleEdit","Group","controlId","handleAddDbFile","newFile","ListGroup","table","handleTableSelect","cursor","table_name","schema","colName","colType","handleExcelModalShow","handleSchemaModalShow","as","rows","href","rel","onHide","Header","closeButton","Title","Body","Label","Footer","success","column","handleRemoveColumn","handleAddColumn","schemaData","columns","col","column_name","data_type","is_primary_key","Error","status","NavigationCards","useHistory","sortedList","title","description","path","icon","FaUserMd","color","FaPlusCircle","FaGift","FaCogs","sort","a","b","minHeight","xs","lg","item","Card","Postgres","actionType","setActionType","error_message","_ref2","hidden","Sql_query","set_tables","tables","resultData","setResultData","showtables","setShowtables","QueryResultTable","overflowX","border","borderRadius","responsive","row","idx","padding","boxSizing","gap","flex","minWidth","_ref3","toUpperCase","maxWidth","resize","overflow","HomeScreen","activated","setActivated","background","sm","FaUniversity","FaBrain","FaUserTie","FaChalkboardTeacher","FaLinkedin","FaGithub","FaYoutube","FaTiktok","FaFacebook","Link","to","aspectRatio","boxShadow","profileImage","alt","objectFit","frameBorder","allow","allowFullScreen","microsoft_logo","PageNotFound","AppContent","Switch","Route","exact","component","Test","template","App","Router","require","config","ReactDOM","render"],"mappings":"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","file":"static/js/main.225d21f5.chunk.js","sourcesContent":["const PLReports = [\r\n    {\r\n    \"tenreport\": \"PL | Tra cứu thông tin khách hàng\",\r\n    \"id\": \"7299ccee-6e38-4f71-94b5-e6659d84ae9b\",\r\n    \"id_mb\": \"7299ccee-6e38-4f71-94b5-e6659d84ae9b\",\r\n    \"link_report\":\"https://datastudio.google.com/reporting/7299ccee-6e38-4f71-94b5-e6659d84ae9b\",\r\n    \"manv\": \"xxxxxx\",\r\n    \"type\": 0,\r\n    \"vw\": \"500px\",\r\n    \"param\": \"?params=xxxxxx\",\r\n    \"param_mb\": \"?params=xxxxxx\",\r\n    \"stt\": \"1001\",\r\n    },\r\n    {\r\n    \"tenreport\": \"PL | Tra cứu thông tin đơn hàng\",\r\n    \"id\": \"0813bfb3-4fdf-4182-8ef4-a1e074ac689c\",\r\n    \"id_mb\": \"0813bfb3-4fdf-4182-8ef4-a1e074ac689c\",\r\n    \"link_report\":\"https://datastudio.google.com/reporting/0813bfb3-4fdf-4182-8ef4-a1e074ac689c\",\r\n    \"manv\": \"xxxxxx\",\r\n    \"type\": 0,\r\n    \"vw\": \"650px\",\r\n    \"param\": \"?params=xxxxxx\",\r\n    \"param_mb\": \"?params=xxxxxx\",\r\n    \"stt\": \"1002\",\r\n    }\r\n]\r\n\r\nexport default PLReports","import { createContext, useState, useEffect } from \"react\";\r\nimport PLReports from \"../data/PLReports\";\r\n// import { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nconst FeedbackContext = createContext();\r\n\r\nexport const FeedbackProvider = ({ children }) => {\r\n  // eslint-disable-next-line\r\n  const [manv, setManv] = useState(\"\");\r\n  const [userInfo, setUserInfo] = useState(\"\");\r\n  const [rpScreen, SetRpScreen] = useState(false);\r\n\r\n  // Reports\r\n  const [Reports, setReports] = useState([]);\r\n  const [FilterReports, setFilterReports] = useState(\"\");\r\n  const [ReportParam, setReportParam] = useState();\r\n  const [ReportId, setReportId] = useState(\"\");\r\n  const [LoginText, setLoginText] = useState(\"\");\r\n  const [LoginLoading, setLoginLoading] = useState(false);\r\n  const [shared, setShared] = useState(true);\r\n  const [vw, setVw] = useState(\"95vw\");\r\n  const [loading, SetLoading] = useState(false);\r\n  const [alert, SetALert] = useState(false);\r\n  const [alertType, SetALertType] = useState(\"alert-success\");\r\n  const [alertText, SetALertText] = useState(\"SUCCESS\");\r\n  // const [rt_report, set_rt_report] = useState(\"https://lookerstudio.google.com/embed/reporting/1ccb8576-9fae-4c46-a757-5a7aa361140d/page/7qYcD\");\r\n  // const history = useHistory();\r\n  // const location = useLocation();\r\n  const URL =\r\n    window.location.host === \"localhost:3000\"\r\n      ? process.env.REACT_APP_PURL\r\n      : process.env.REACT_APP_PURL;\r\n  // const URL = process.env.REACT_PRO_URL\r\n  const LOCALURL = \"https://bi.meraplion.com/local\"\r\n\r\n  useEffect(() => {\r\n    console.log(\"getUserInfo() from context\");\r\n    getUserInfo();\r\n  // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const loginUser = async (logindata) => {\r\n    setLoginLoading(true);\r\n    const response = await fetch(`${URL}/loginv1/`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(logindata),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const data = await response.json();\r\n      setLoginText(data.message);\r\n      setLoginLoading(false);\r\n    } else {\r\n      const data = await response.json();\r\n      console.log(\"loginUser response\", data)\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n      setUserInfo(JSON.parse(localStorage.getItem(\"userInfo\")));\r\n\r\n      const data1 = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n      await fetchReports(data1.manv);\r\n      await fetchUserStatus(data1.manv, data1.token);\r\n      setLoginLoading(false);\r\n      setLoginText(\"\");\r\n    }\r\n  };\r\n\r\n  const fetchReports = async (manv) => {\r\n    const response = await fetch(\r\n      \"https://storage.googleapis.com/django_media_biteam/public/user_reports.json\"\r\n    );\r\n    const data = await response.json();\r\n    const lstreports = data.filter((el) => el.manv === manv);\r\n    const manv_el = manv.substring(0, 2);\r\n\r\n    // public reports\r\n    // if (manv_el === \"EL\") {\r\n    //   setReports(lstreports);\r\n    //   localStorage.setItem(\"userLstReports\", JSON.stringify(lstreports));\r\n    // } else {\r\n    let plreports = PLReports;\r\n    plreports[0].manv = manv;\r\n    lstreports.push(plreports[0]);\r\n    plreports[1].manv = manv;\r\n    lstreports.push(plreports[1]);\r\n\r\n    setReports(lstreports);\r\n    console.log(lstreports)\r\n    localStorage.setItem(\"userLstReports\", JSON.stringify(lstreports));\r\n      // console.log(\"lstreports\", lstreports)\r\n    // }\r\n    // end\r\n  };\r\n  \r\n\r\n  const fetchFilerReports = (stt, isMB) => {\r\n    let data = JSON.parse(localStorage.getItem(\"userLstReports\"));\r\n    let manv = JSON.parse(localStorage.getItem(\"userInfo\")).manv;\r\n    let lstreports = data.filter((el) => el.manv === manv);\r\n    let manv_int_0 = manv.replaceAll(\"MR\", \"11\")\r\n    setReports(lstreports);\r\n    let report_obj = lstreports.filter((el) => el.stt === stt)[0];\r\n    console.log(\"report_obj\", report_obj);\r\n    setFilterReports(report_obj);\r\n\r\n    if (Object.keys(report_obj).length > 0) {\r\n      setShared(true);\r\n      let rpvw = isMB ? \"95vw\" : report_obj.vw;\r\n      setVw(rpvw);\r\n      let rpid = isMB ? report_obj.id_mb : report_obj.id;\r\n      setReportId(rpid);\r\n      let rppr = isMB ? report_obj.param_mb : report_obj.param;\r\n\r\n      if ( report_obj.type === 1) {\r\n        setReportParam(rppr.replace(\"xxxxxx\", manv).replaceAll(\"vvvvvv\", manv_int_0));\r\n        console.log(rppr.replace(\"xxxxxx\", manv).replaceAll(\"vvvvvv\", manv_int_0));\r\n      }\r\n      else {\r\n        setReportParam(rppr.replace(\"xxxxxx\", \"MR0000\"));\r\n        console.log(rppr.replace(\"xxxxxx\", \"MR0000\"));\r\n      }\r\n    } else {\r\n      setShared(false);\r\n    }\r\n  };\r\n\r\n  const get_version = () => {\r\n    var date = new Date();\r\n    var seconds = date.getSeconds()< 10 ? '0'+ date.getSeconds().toString() : date.getSeconds().toString();\r\n    var minutes = date.getMinutes()< 10 ? '0'+ date.getMinutes().toString() : date.getMinutes().toString();\r\n    var hour = date.getHours()< 10 ? '0'+ date.getHours().toString() : date.getHours().toString();\r\n    var milliseconds = (date.getMilliseconds() < 10 ) ? '00'+ date.getMilliseconds().toString()\r\n    : (date.getMilliseconds() < 100 ) ? '0'+ date.getMilliseconds().toString()\r\n    : date.getMilliseconds().toString();\r\n    // var milliseconds = date.getMilliseconds().toString();\r\n    return 'T'+hour+minutes+seconds+milliseconds\r\n  }\r\n\r\n  function formatDate(date) {\r\n    var d = new Date(date),\r\n        month = '' + (d.getMonth() + 1),\r\n        day = '' + d.getDate(),\r\n        year = d.getFullYear();\r\n\r\n    if (month.length < 2) \r\n        month = '0' + month;\r\n    if (day.length < 2) \r\n        day = '0' + day;\r\n\r\n    return [year, month, day].join('-');\r\n  }\r\n\r\n  function get_current_dmy() {\r\n      let d = new Date()\r\n      let month = d.getMonth() + 1\r\n      let day = d.getDate()\r\n      let year = d.getFullYear() \r\n    return [year, month, day];\r\n  }\r\n\r\n  function Inserted_at() {\r\n    let datetime = new Date();\r\n    datetime.setHours(datetime.getHours() + 7); // Add 7 hours\r\n    const inserted_at = datetime.toISOString().replace(\"Z\", \"\");\r\n    return inserted_at;\r\n  }\r\n\r\n  function removeAccents(str) {\r\n    var AccentsMap = [\r\n      \"aàảãáạăằẳẵắặâầẩẫấậ\",\r\n      \"AÀẢÃÁẠĂẰẲẴẮẶÂẦẨẪẤẬ\",\r\n      \"dđ\", \"DĐ\",\r\n      \"eèẻẽéẹêềểễếệ\",\r\n      \"EÈẺẼÉẸÊỀỂỄẾỆ\",\r\n      \"iìỉĩíị\",\r\n      \"IÌỈĨÍỊ\",\r\n      \"oòỏõóọôồổỗốộơờởỡớợ\",\r\n      \"OÒỎÕÓỌÔỒỔỖỐỘƠỜỞỠỚỢ\",\r\n      \"uùủũúụưừửữứự\",\r\n      \"UÙỦŨÚỤƯỪỬỮỨỰ\",\r\n      \"yỳỷỹýỵ\",\r\n      \"YỲỶỸÝỴ\"    \r\n    ];\r\n    for (var i=0; i<AccentsMap.length; i++) {\r\n      var re = new RegExp('[' + AccentsMap[i].substr(1) + ']', 'g');\r\n      var char = AccentsMap[i][0];\r\n      str = str.replace(re, char);\r\n    }\r\n    return str;\r\n  }\r\n\r\n  function get_id() {\r\n    let timestampId = new Date(Date.now() + 7 * 3600000).toISOString().replace(/[-:.TZ]/g, '');\r\n    return timestampId\r\n  }\r\n\r\n    const formatNumber = (value) => {\r\n      return value.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    };\r\n\r\n  const fetch_real_time_report = async (data_user, local_url, rppr) => {\r\n    console.log(\"fetch_real_time_report\", data_user, local_url, rppr)\r\n    try {\r\n      setShared(false)\r\n      SetLoading(true)\r\n      const response = await fetch(`${LOCALURL}/${local_url}/`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data_user),\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        const data = await response.json();\r\n        console.log(\"reponse not ok\", data);\r\n        SetLoading(false);\r\n        setShared(false);\r\n      } else {\r\n        const data = await response.json();\r\n        setReportParam(rppr.replaceAll(\"xxxxxx\", data_user.manv).replaceAll(\"vvvvvv\", data_user.version))\r\n        console.log(rppr.replaceAll(\"xxxxxx\", data_user.manv).replaceAll(\"vvvvvv\", data_user.version))\r\n        console.log(\"reponse ok\", data);\r\n        SetLoading(false);\r\n        setShared(true);\r\n      }\r\n    } catch (error) {\r\n      SetLoading(false);\r\n      setShared(false);\r\n      console.log(error);\r\n    }\r\n\r\n  }\r\n\r\n  const fetchFilerReportsRT = async (stt, isMB, filter_data) => {\r\n    console.log(\"start funtion fetchFilerReportsRT\")\r\n    console.log(stt, isMB, filter_data)\r\n    const data = JSON.parse(localStorage.getItem(\"userLstReports\"));\r\n    const manv = JSON.parse(localStorage.getItem(\"userInfo\")).manv;\r\n    const lstreports = data.filter((el) => el.manv === manv);\r\n    const mobile = isMB;\r\n    const manv_el = manv.substring(0, 2);\r\n\r\n    // public reports\r\n    if (manv_el === \"EL\") {\r\n      setReports(lstreports);\r\n    } else {\r\n      let plreports = PLReports;\r\n      plreports[0].manv = manv;\r\n      lstreports.push(plreports[0]);\r\n      plreports[1].manv = manv;\r\n      lstreports.push(plreports[1]);\r\n\r\n      setReports(lstreports);\r\n    }\r\n    // end\r\n\r\n    let report_obj = lstreports.filter((el) => el.stt === stt)[0];\r\n\r\n    console.log(\"report_obj context\", report_obj)\r\n\r\n    setFilterReports(report_obj);\r\n\r\n    if (report_obj) {\r\n      const rpvw = isMB ? \"95vw\" : report_obj.vw;\r\n      setVw(rpvw);\r\n      const rpid = isMB ? report_obj.id_mb : report_obj.id;\r\n      setReportId(rpid);\r\n\r\n      const link_report = report_obj.link_report\r\n      const new_local_url = link_report.split('=')[1]\r\n      const new_phancap = String(report_obj.type)===\"0\" ? false : true;\r\n      console.log(\"new_phancap\", new_phancap);\r\n      const version = get_version()\r\n\r\n      const data = {\r\n        \"manv\":manv,\r\n        \"mobile\":mobile,\r\n        \"version\":version,\r\n        \"phancap\": new_phancap\r\n      }\r\n      const new_data = {...data, ...filter_data}\r\n      console.log(\"new_data\", new_data)\r\n      const rppr = isMB ? report_obj.param_mb : report_obj.param;\r\n\r\n      await fetch_real_time_report(new_data, new_local_url, rppr);\r\n\r\n    }\r\n    else {\r\n      // setShared(false);\r\n      void(0);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const clearFilterReport = () => {\r\n    setFilterReports(\"\");\r\n  };\r\n\r\n  const userLogger = async (manv, id, ismb, dv_width) => {\r\n    const data = {\r\n      manv,\r\n      id,\r\n      ismb,\r\n      dv_width,\r\n    };\r\n\r\n    console.log(\"userLogger\", data);\r\n\r\n    fetch(`${URL}/userreportlogger/`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n  };\r\n\r\n  const fetchUserStatus = async (manv, token) => {\r\n    const logindata = { token };\r\n    // console.log(logindata)\r\n    const response = await fetch(`${URL}/getstatusv1/${manv}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(logindata),\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    console.log(\"fetchUserStatus response\", data)\r\n\r\n    !data.check ? setUserInfo(\"\") : void 0;\r\n    !data.check ? setReports([]) : void 0;\r\n    !data.check ? window.localStorage.removeItem(\"userInfo\") : void(0);\r\n    !data.check ? window.localStorage.removeItem(\"userLstReports\") : void(0);\r\n  };\r\n\r\n\r\n\r\n  const getUserInfo = async () => {\r\n    SetLoading(true);\r\n    if (JSON.parse(localStorage.getItem(\"userInfo\"))) {\r\n      const data = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n      console.log(\"getUserInfo manv\", data)\r\n      setUserInfo(data);\r\n      await fetchReports(data.manv);\r\n      await fetchUserStatus(data.manv, data.token);\r\n    SetLoading(false);\r\n    } \r\n    \r\n    else {\r\n      setUserInfo(\"\");\r\n      SetLoading(false);\r\n    }\r\n    \r\n    \r\n  };\r\n\r\n  const logoutUser = () => {\r\n    window.localStorage.removeItem(\"userInfo\");\r\n    window.localStorage.removeItem(\"userLstReports\");\r\n    setUserInfo(\"\");\r\n    setLoginText(\"\");\r\n    setReports([]);\r\n    setFilterReports(\"\");\r\n  };\r\n\r\n  return (\r\n    <FeedbackContext.Provider\r\n      value={{\r\n        formatDate,\r\n        get_current_dmy,\r\n        Inserted_at,\r\n        removeAccents,\r\n        get_id,\r\n        formatNumber,\r\n        loading,\r\n        SetLoading,\r\n        alert,\r\n        SetALert,\r\n        alertText,\r\n        SetALertText,\r\n        alertType,\r\n        SetALertType,\r\n        manv,\r\n        userInfo,\r\n        loginUser,\r\n        logoutUser,\r\n        fetchReports,\r\n        Reports,\r\n        LoginText,\r\n        LoginLoading,\r\n        FilterReports,\r\n        fetchFilerReports,\r\n        fetchFilerReportsRT,\r\n        clearFilterReport,\r\n        ReportParam,\r\n        shared,\r\n        vw,\r\n        ReportId,\r\n        userLogger,\r\n        rpScreen,\r\n        SetRpScreen,\r\n      }}\r\n    >\r\n      {children}\r\n    </FeedbackContext.Provider>\r\n  );\r\n};\r\n\r\nexport default FeedbackContext;\r\n","/* eslint-disable */\r\nimport { useContext, useEffect, useState,useRef  } from \"react\";\r\nimport { v4 as uuid } from 'uuid';\r\nimport './myvnp.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport FeedbackContext from '../context/FeedbackContext'\r\nimport {\r\n    Button,\r\n    Col,\r\n    Row,\r\n    Container,\r\n    Dropdown,\r\n    Form,\r\n    Spinner,\r\n    InputGroup,\r\n    Stack,\r\n    FloatingLabel,\r\n    Table,\r\n    Pagination\r\n} from \"react-bootstrap\";\r\n\r\nfunction Template({history}) {\r\n    \r\n    const { removeAccents, userLogger, loading, SetLoading, formatDate, alert, alertText, alertType, SetALert, SetALertText, SetALertType } = useContext(FeedbackContext)\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"userInfo\")) {\r\n        const media = window.matchMedia('(max-width: 960px)');\r\n        const isMB = (media.matches);\r\n        const dv_width = window.innerWidth;\r\n        userLogger(JSON.parse(localStorage.getItem(\"userInfo\")).manv, 'template', isMB, dv_width);\r\n        set_manv(JSON.parse(localStorage.getItem(\"userInfo\")).manv);\r\n        } else {\r\n            history.push('/login?redirect=/formcontrol/template');\r\n        };\r\n    }, []);\r\n\r\n    const [EDITMODE, SET_EDITMODE] = useState(false);\r\n    const [manv, set_manv] = useState(\"\");\r\n    const current_date = formatDate(Date());\r\n    const [id, set_id] = useState(\"\");\r\n    const [text, set_text] = useState(\"\");\r\n    const [number, set_number] = useState(\"\");\r\n    const [onDate, setDate] = useState(current_date);\r\n    const [sp_id, set_sp_id] = useState(\"\");\r\n    const [sp_sl, set_sp_sl] = useState(\"\");\r\n    const [sp_ghi_chu, set_sp_ghi_chu] = useState(\"\");\r\n    const [dd_search1, set_dd_search1] = useState(\"\");\r\n    const [dd_select1, set_dd_select1] = useState(\"\");\r\n    const [lst_dd1, set_lst_dd1] = useState([{\"uuid\":\"4733060b-b70b-4f8c-ab49-267d865cccc3\",\"id\":\"Eh110\",\"name\": 10, checked:true},{\"uuid\":\"d0b3f98f-948b-4037-af7a-3d97a86d8db1\",\"id\":\"Eh111\",\"name\": 20, checked:true}]);\r\n    const [lst_item, set_lst_item] = useState([{\"uuid\":\"4733060b-b70b-4f8c-ab49-267d865cccc3\",\"id\":\"Eh110\",\"name\": 10, \"ghi_chu\":\"note1\",\"active\":true, checked:true},{\"uuid\":\"d0b3f98f-948b-4037-af7a-3d97a86d8db1\",\"id\":\"Eh111\",\"name\": 20, \"ghi_chu\":\"note2\",\"active\":true, checked:true}]);\r\n    const [item_uuid, set_item_uuid] = useState(\"\");\r\n    const [item_search1, set_item_search1] = useState(\"\");\r\n    const [edit_sp, set_edit_sp] = useState(false);\r\n    const [edit_sp1, set_edit_sp1] = useState(false);\r\n    const [selectedFile, setSelectedFile] = useState();\r\n\r\n    // const URL = EDITMODE ? 'ABC' : 'XYZ'\r\n    const [page, set_page] = useState(1);\r\n    const data_table = [\r\n        {\"id\":1,\"name\":\"Nguyen Thuy Kieu HCPXXXXXXXX BV Tan Phu SG\", \"class\":\"Ho Thi Hong Gam (MR0673)\", \"QuaTang\":\"Chai nuoc tuong ChinSu, SL:02 (5.000.000 VND)\"},\r\n        {\"id\":1,\"name\":\"Nguyen Thuy Kieu HCPXXXXXXXX BV Tan Phu SG\", \"class\":\"Ho Thi Hong Gam (MR0673)\", \"QuaTang\":\"Chai nuoc tuong ChinSu\"},\r\n        {\"id\":1,\"name\":\"Nguyen Thuy Kieu HCPXXXXXXXX BV Tan Phu SG\", \"class\":\"Ho Thi Hong Gam (MR0673)\", \"QuaTang\":\"Chai nuoc tuong ChinSu\"},\r\n        {\"id\":1,\"name\":\"Nguyen Thuy Kieu HCPXXXXXXXX BV Tan Phu SG\", \"class\":\"Ho Thi Hong Gam (MR0673)\", \"QuaTang\":\"Chai nuoc tuong ChinSu\"},\r\n        {\"id\":1,\"name\":\"Nguyen Thuy Kieu HCPXXXXXXXX BV Tan Phu SG\", \"class\":\"Ho Thi Hong Gam (MR0673)\", \"QuaTang\":\"Chai nuoc tuong ChinSu\"},\r\n        {\"id\":1,\"name\":\"Nguyen Thuy Kieu HCPXXXXXXXX BV Tan Phu SG\", \"class\":\"Ho Thi Hong Gam (MR0673)\", \"QuaTang\":\"Chai nuoc tuong ChinSu\"},\r\n        {\"id\":1,\"name\":\"Nguyen Thuy Kieu HCPXXXXXXXX BV Tan Phu SG\", \"class\":\"Ho Thi Hong Gam (MR0673)\", \"QuaTang\":\"Chai nuoc tuong ChinSu\"},\r\n        {\"id\":1,\"name\":\"Nguyen Thuy Kieu HCPXXXXXXXX BV Tan Phu SG\", \"class\":\"Ho Thi Hong Gam (MR0673)\", \"QuaTang\":\"Chai nuoc tuong ChinSu\"},\r\n        {\"id\":1,\"name\":\"Nguyen Thuy Kieu HCPXXXXXXXX BV Tan Phu SG\", \"class\":\"Ho Thi Hong Gam (MR0673)\", \"QuaTang\":\"Chai nuoc tuong ChinSu\"},\r\n        {\"id\":1,\"name\":\"Nguyen Thuy Kieu HCPXXXXXXXX BV Tan Phu SG\", \"class\":\"Ho Thi Hong Gam (MR0673)\", \"QuaTang\":\"Chai nuoc tuong ChinSu\"}\r\n    ]\r\n\r\n    const [recording, setRecording] = useState(false);\r\n    const [audioBlob, setAudioBlob] = useState(null);\r\n    const [startTime, setStartTime] = useState(null);\r\n    const [endTime, setEndTime] = useState(null);\r\n    const [countdown, setCountdown] = useState(30); // 30 seconds max\r\n    const mediaRecorderRef = useRef(null);\r\n    const audioChunksRef = useRef([]);\r\n    const countdownRef = useRef(null);\r\n\r\n    const items = [1,2,3,4,5]\r\n\r\n    const handle_id_enter = (e) => {\r\n        if (e.key === 'Enter') {\r\n            console.log(e.target.value);\r\n            fetch_initial_data(e.target.value);\r\n            set_text(e.target.value);\r\n        }\r\n    }\r\n\r\n    const fetch_initial_data = async (select_id) => {\r\n        SetLoading(true)\r\n        const response = await fetch(`https://bi.meraplion.com/local/template/?id=${select_id}`)\r\n        \r\n        if (!response.ok) {\r\n            SetLoading(false)\r\n        }\r\n\r\n        else {\r\n        const data_arr = await response.json()\r\n        const data = data_arr[0]\r\n        set_text(data.id)\r\n        console.log(data)\r\n        SetLoading(false)\r\n\r\n        }\r\n    }\r\n\r\n    const handeClick = (e) => {\r\n        const lst = [];\r\n        for (const [index, element] of lst_dd1.entries()) {\r\n            if(element.id === e.target.id) {\r\n                element.checked = e.target.checked;\r\n                lst.push(element);\r\n            }\r\n            else {\r\n                lst.push(element);\r\n            }\r\n        }\r\n        set_lst_dd1(lst);\r\n        console.log(\"lst\", lst_dd1);\r\n    }  \r\n\r\n    const handleClear = () => {\r\n        const lst = [];\r\n        for (const i of lst_dd1) {\r\n            i.checked = false\r\n            lst.push(i);\r\n            };\r\n            set_lst_dd1(lst)\r\n        }\r\n\r\n    const on_click_them_san_pham = (e) => {\r\n        const arr2 = [...lst_item];\r\n        const data = {\r\n            \"uuid\": item_uuid ===\"\" ? uuid() : item_uuid,\r\n            \"id\":sp_id,\r\n            \"active\":true,\r\n            \"name\":Number(sp_sl),\r\n            \"ghi_chu\":sp_ghi_chu\r\n        }\r\n        \r\n        arr2.push(data);\r\n        console.log(\"on_click_them_san_pham\", arr2)\r\n        set_lst_item(arr2);\r\n        set_item_uuid(\"\");\r\n        set_sp_id(\"\");\r\n        set_sp_sl(0);\r\n        set_sp_ghi_chu(\"\");\r\n        set_edit_sp(false)\r\n    }\r\n\r\n\r\n    const on_click_xoa_san_pham = (data, _) => {\r\n        const arr2 = []\r\n        for (const [_, element] of lst_item.entries()) {\r\n            if(element.sp_id === data.sp_id) {\r\n                element.active = false\r\n                arr2.push(element);\r\n            }\r\n            else {\r\n                arr2.push(element);\r\n            }\r\n        }\r\n        console.log(\"on_click_xoa_san_pham\", arr2)\r\n        set_lst_item(arr2);\r\n    }\r\n\r\n    const on_click_edit_san_pham = (el, _) => {\r\n        document.getElementById(\"IDSP\").focus();\r\n        set_item_uuid(el.uuid);\r\n        set_sp_id(el.id);\r\n        set_sp_sl(el.name);\r\n        set_sp_ghi_chu(el.ghi_chu);\r\n        set_edit_sp(!edit_sp)\r\n        on_click_xoa_san_pham(el);\r\n\r\n    }\r\n\r\n    const hand_upload_files = async () => {\r\n\r\n        const formData = new FormData();\r\n\r\n        let data = {\r\n            \"test\":1,\r\n            \"status\":0\r\n        }\r\n\r\n        JSON.stringify(data)\r\n\r\n        formData.append('data', JSON.stringify(data));\r\n\r\n        for (let i of selectedFile) {\r\n            console.log(i)\r\n            \r\n            formData.append('images', i)\r\n        }\r\n\r\n        const response = await fetch(`https://bi.meraplion.com/local/file_upload/`, {\r\n            method: \"POST\",\r\n            headers: {\r\n            },\r\n            body: formData,\r\n        });\r\n\r\n        if (!response.ok) {\r\n            const data = await response.json();\r\n            console.log(data);\r\n        } else {\r\n            const data = await response.json();\r\n            console.log(data);\r\n        }\r\n\r\n    }\r\n\r\n    const clear_data = () => {\r\n        // setSelectedFile([]);\r\n        // setSelectedFile_2([]);\r\n        // set_chon_ma_kh(\"\");\r\n    }\r\n\r\n    const startRecording = async () => {\r\n        const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n        mediaRecorderRef.current = new MediaRecorder(stream);\r\n        audioChunksRef.current = [];\r\n    \r\n        mediaRecorderRef.current.ondataavailable = (event) => {\r\n          if (event.data.size > 0) {\r\n            audioChunksRef.current.push(event.data);\r\n          }\r\n        };\r\n    \r\n        mediaRecorderRef.current.onstop = () => {\r\n          const audioBlob = new Blob(audioChunksRef.current, { type: \"audio/wav\" });\r\n          setAudioBlob(audioBlob);\r\n        };\r\n    \r\n        // Set start and end time\r\n        const now = new Date();\r\n        setStartTime(now);\r\n        setEndTime(new Date(now.getTime() + 30000)); // 30 seconds later\r\n    \r\n        mediaRecorderRef.current.start();\r\n        setRecording(true);\r\n    \r\n        // Start countdown timer\r\n        setCountdown(30);\r\n        countdownRef.current = setInterval(() => {\r\n          setCountdown((prev) => {\r\n            if (prev <= 1) {\r\n              clearInterval(countdownRef.current);\r\n            }\r\n            return prev - 1;\r\n          });\r\n        }, 1000);\r\n    \r\n        // Stop recording after 30 seconds\r\n        setTimeout(() => {\r\n          if (mediaRecorderRef.current.state === \"recording\") {\r\n            stopRecording();\r\n          }\r\n        }, 30000);\r\n      };\r\n    \r\n      const stopRecording = () => {\r\n        if (mediaRecorderRef.current && mediaRecorderRef.current.state === \"recording\") {\r\n          mediaRecorderRef.current.stop();\r\n          setRecording(false);\r\n          clearInterval(countdownRef.current);\r\n        }\r\n      };\r\n\r\n      const removeAudio = () => {\r\n        setAudioBlob(null);\r\n        setStartTime(null);\r\n        setEndTime(null);\r\n        setCountdown(30);\r\n      };\r\n\r\n    //   const uploadAudio = async () => {\r\n    //     if (!audioBlob) return alert(\"No audio recorded!\");\r\n    \r\n    //     const formData = new FormData();\r\n    //     formData.append(\"audio\", audioBlob, \"recorded_audio.wav\");\r\n    \r\n    //     try {\r\n    //       const response = await fetch(\"http://127.0.0.1:8000/upload-audio/\", {\r\n    //         method: \"POST\",\r\n    //         body: formData,\r\n    //       });\r\n    \r\n    //       if (response.ok) {\r\n    //         alert(\"Audio uploaded successfully!\");\r\n    //       } else {\r\n    //         alert(\"Failed to upload audio.\");\r\n    //       }\r\n    //     } catch (error) {\r\n    //       console.error(\"Upload error:\", error);\r\n    //       alert(\"Error uploading audio.\");\r\n    //     }\r\n    //   };\r\n\r\n    const post_form_data = async (data) => {\r\n        SetLoading(true)\r\n        const response = await fetch(`https://bi.meraplion.com/local/template/`, {\r\n            method: \"POST\",\r\n            headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(data),\r\n        });\r\n\r\n        if (!response.ok) {\r\n            SetLoading(false);\r\n            const data = await response.json();\r\n            console.log(data);\r\n        } else {\r\n            SetLoading(false);\r\n            const data = await response.json();\r\n            console.log(data);\r\n            SetALert(true);\r\n            SetALertType(\"alert-warning\");\r\n            SetALertText(\"ĐÃ TẠO THÀNH CÔNG\");\r\n            setTimeout(() => SetALert(false), 3000);\r\n            clear_data();\r\n\r\n        }\r\n    }\r\n\r\n    const handle_submit = (e) => {\r\n        e.preventDefault();\r\n        const current_date = formatDate(Date());\r\n\r\n        const lst_value_dd1 = []\r\n        for (const i of lst_dd1) {\r\n            if (i.checked === true) {lst_value_dd1.push(i.id)}\r\n        };\r\n        \r\n        console.log(\"lst_value_dd1\", lst_value_dd1);\r\n        const data = {\r\n            \"manv\":manv,\r\n            \"current_date\":current_date,\r\n            \"text\":text,\r\n            \"list_item\": lst_item,\r\n            \"lst_value_dd1\": lst_value_dd1\r\n        }\r\n        console.log(data);\r\n        post_form_data(data);\r\n        set_text(\"\");\r\n    }\r\n\r\n    if (!loading) {\r\n        return (\r\n        <Container className=\"bg-teal-100 h-100\" fluid>\r\n            <Row className=\"justify-content-center\">\r\n                <Col md={5} >\r\n                    <Button size=\"sm\" variant=\"light\" onClick={e => SET_EDITMODE(!EDITMODE) } active={!EDITMODE}> CHỈNH SỬA ? </Button>\r\n\r\n                    {EDITMODE &&\r\n                    <Form.Control className=\"mt-2 text-truncate\" type=\"text\" onKeyDown={ handle_id_enter } onChange={ (e) => set_id(e.target.value) } value = {id} placeholder=\"Tìm Số ID\" />\r\n                    }\r\n\r\n                    <div>\r\n                        <h3>{  EDITMODE ? 'FORM EDIT' : 'FORM CREATE' }</h3>\r\n\r\n                        {/* ALERT COMPONENT */}\r\n                        {alert &&\r\n                        <div className={`alert ${alertType} alert-dismissible mt-2`} role=\"alert\" >\r\n                            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\">\r\n                            </button>\r\n                            <span><strong>Cảnh Báo:  </strong>{alertText}</span>\r\n                        </div>\r\n                        }\r\n\r\n                        <Form onSubmit={handle_submit}>\r\n                        {/* START FORM BODY */}\r\n                        \r\n                        {/* ID */}\r\n                        <FloatingLabel label=\"ID\" className=\"border rounded\" > <Form.Control disabled={EDITMODE} required type=\"text\" placeholder=\"\" className=\"\" onChange={ (e) => set_id(e.target.value) } value = {id}/> </FloatingLabel>\r\n                                                \r\n                        {/* TEXT */}\r\n                        <FloatingLabel label=\"TEXT\" className=\"border rounded mt-2\" > <Form.Control required type=\"text\" className=\"\" placeholder=\"\" onChange={ (e) => set_text(e.target.value) } value = {text}/> </FloatingLabel>\r\n                        \r\n                        {/* NUMBER */}\r\n                        <FloatingLabel label=\"NUMBER\" className=\"border rounded mt-2\" > <Form.Control required type=\"number\" className=\"\" placeholder=\"\" onChange={ (e) => set_number(e.target.value) } value = {number} /> </FloatingLabel>\r\n                        {/* <InputGroup className=\"mt-2 \"> <InputGroup.Text className=\"w150px bg-secondary text-white  text-truncate\"> NUMBER </InputGroup.Text> <Form.Control required type=\"number\" className=\"\" placeholder=\"NUMBER\" onChange={ (e) => set_number(e.target.value) } value = {number}/> </InputGroup> */}\r\n                        \r\n                        {/* DATE */}\r\n                        <FloatingLabel label=\"DATE\" className=\"border rounded mt-2\" > <Form.Control required type=\"date\" className=\"\" placeholder=\"\" onChange={(e) => setDate(e.target.value)} value={onDate} /> </FloatingLabel>\r\n                        \r\n                        <Form.Select required className=\"mt-2\" style={{height:\"60px\"}}  onChange={ e => console.log(e.target.value) }>\r\n                            <option value=\"\">Some Invalid Option</option>\r\n                            <option value=\"cash\">cash</option>\r\n                            <option value=\"online\">online</option>\r\n                        </Form.Select>\r\n                        \r\n                        \r\n                        {/* SELECT WITH SEARCH */}\r\n                        <InputGroup className=\"mt-2 d-flex\" style={{height:\"60px\"}}>\r\n                            <InputGroup.Text className=\" w150px bg-secondary text-white text-wrap text-left\">SELECT</InputGroup.Text>                       \r\n                            <Dropdown className=\"d-inline mt-2 w150px\" autoClose=\"true\" block=\"true\" onSelect = {e =>set_dd_select1(e)}>\r\n                                <Dropdown.Toggle className=\"bg-white border-0 text-dark text-left flex-grow-1\"> \r\n                                {dd_select1 ===\"\" ? \"Bấm Để Chọn\": dd_select1}\r\n                                </Dropdown.Toggle>\r\n                                \r\n                                <Dropdown.Menu className=\"\" style={{maxHeight: \"410px\", overflowY: \"auto\"}}>\r\n                                <Form.Control type=\"text\" placeholder=\"Tìm Giá Trị\" onChange={ (e) => set_dd_search1(e.target.value) } value = {dd_search1} />\r\n                                \r\n                                <Dropdown.Divider style={{height: 1, backgroundColor: 'steelblue'}}></Dropdown.Divider>\r\n                                    {\r\n                                    lst_dd1\r\n                                    .filter( el => removeAccents(el.id).toLowerCase().includes(dd_search1) )\r\n                                    .map( (el, index) =>\r\n                                        <Dropdown.Item key={index} eventKey={el.id}> {el.id} </Dropdown.Item>\r\n                                    )\r\n                                    }\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                        </InputGroup>\r\n\r\n                        {/* MULTISELECT WITH SEARCH */}\r\n                        <InputGroup className=\"mt-2 d-flex\" style={{height:\"60px\"}}> \r\n                        <InputGroup.Text className=\" w150px bg-secondary text-white text-wrap text-left \">SELECT MULTI</InputGroup.Text> \r\n                        <Dropdown className=\"d-inline mx-2 w150px\" autoClose=\"true\" required block=\"true\">\r\n                            <Dropdown.Toggle className=\"text-dark text-left bg-white flex-grow-1 border-0\">\r\n                            Bấm Để Chọn\r\n                            </Dropdown.Toggle>\r\n\r\n                            <Dropdown.Menu style={{maxHeight: \"410px\", overflowY: \"auto\"}}>\r\n                            <Button variant=\"warning\" size=\"sm\" style={{width:\"200px\"}} onClick={handleClear}>Clear All</Button>\r\n                            <Form.Control className=\"mt-2\" type=\"text\" onChange={ e => set_dd_search1(e.target.value) } placeholder=\"Tìm Giá Trị\" />\r\n                            {lst_dd1\r\n                                .filter( el => el.id.includes(dd_search1))\r\n                                .slice(0, 100)\r\n                                .map( (el, index) => \r\n                                <Form.Check key={index} className=\"text-nowrap\" type=\"switch\" checked={el.checked} onChange={handeClick} id={el.id} label={el.id}/>)\r\n                            }\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                        </InputGroup>\r\n                        \r\n                        {/* ADD MULTIPLE ITEMS WITH THE SAME ID */}\r\n\r\n                        <div className=\"mt-3 p-1 border border-2 border-success rounded\">\r\n                        <FloatingLabel label=\"MA SP\" className=\"border rounded mt-2\" > <Form.Control type=\"text\" className=\"\" placeholder=\"MÃ SP\" onChange={ (e) => set_sp_id(e.target.value) } value = {sp_id}/> </FloatingLabel>\r\n                        <FloatingLabel label=\"SO LUONG\" className=\"border rounded mt-2\" > <Form.Control id=\"IDSP\" type=\"number\" className=\"\" placeholder=\"SỐ LƯỢNG\" onChange={ (e) => set_sp_sl(e.target.value) } value = {sp_sl}/> </FloatingLabel>\r\n                        <FloatingLabel label=\"GHI CHU\" className=\"border rounded mt-2\" > <Form.Control type=\"text\" className=\"\" placeholder=\"GHI CHÚ\" onChange={ (e) => set_sp_ghi_chu(e.target.value) } value = {sp_ghi_chu}/> </FloatingLabel>\r\n                        \r\n                        {!edit_sp ? (\r\n                            <>\r\n                            <Button size=\"sm\" variant=\"success\" id=\"button-addon1\" className=\"mb-1 text-left w150px\" onClick={ on_click_them_san_pham }>\r\n                            + SP\r\n                            </Button>\r\n                            <Form.Control className=\"w150px\" type=\"text\" onChange={ e => set_item_search1(e.target.value) } placeholder=\"Tìm Giá Trị\" />\r\n                            </>\r\n                        )\r\n                        :(    \r\n                            <Button size=\"sm\" variant=\"danger\" id=\"button-addon1\" className=\"mb-1 text-left w150px\" onClick={ on_click_them_san_pham }>\r\n                            UPDATE\r\n                            </Button>\r\n                        )\r\n                        }\r\n\r\n                        {!edit_sp && (\r\n                        \r\n                            lst_item\r\n                            .filter( el => el.active === true)\r\n                            .filter( el => el.id.includes(item_search1))\r\n                            .map( (el, index) =>                                \r\n                                <InputGroup key={index} className=\"ml-1\">\r\n                                    <Button  className=\"font-weight-bold w75px\" variant=\"outline-danger\" onClick={ () => on_click_xoa_san_pham(el, index) } > Xóa </Button>\r\n                                    <Button  className=\"font-weight-bold w75px\" variant=\"outline-success\" onClick={ () => on_click_edit_san_pham(el, index) } > Edit </Button> \r\n                                    <Form.Control readOnly type=\"text\" className=\"\" placeholder=\"ID SP\"  value = {el.id}/>\r\n                                    <Form.Control readOnly type=\"number\" className=\"\" placeholder=\"SL SP\"  value = {el.name}/>\r\n                                    <Form.Control readOnly type=\"text\" className=\"\" placeholder=\"GHI CHU\"  value = {el.ghi_chu}/>\r\n                                </InputGroup>\r\n                            )\r\n                        )\r\n                        }\r\n\r\n                        </div >\r\n                        \r\n                        <Button disabled={edit_sp | edit_sp1 | dd_select1===\"\"} className='mt-2' variant=\"warning\" type=\"submit\" style={{width: \"100%\", fontWeight: \"bold\"}}> LƯU THÔNG TIN </Button>\r\n                        \r\n                        <Table  className=\"w-auto text-wrap mb-0\" striped bordered size=\"sm\" variant=\"light\">\r\n                        <colgroup>\r\n                        <col span=\"1\" style={{width: \"1%\"}}/>\r\n                        <col span=\"1\" style={{width: \"25%\"}}/>\r\n                        <col span=\"1\" style={{width: \"25%\"}}/>\r\n                        <col span=\"1\" style={{width: \"25%\"}}/>\r\n                        <col span=\"1\" style={{width: \"1%\"}}/>\r\n                        </colgroup>\r\n                        <thead >\r\n                        <tr>\r\n                        <th>#</th>\r\n                        <th>id</th>\r\n                        <th>name</th>\r\n                        <th>class</th>\r\n                        <th>approve</th>\r\n                        </tr>\r\n                        </thead>\r\n                            <tbody >\r\n                            {data_table\r\n                            .filter( el => el.id === page )\r\n                            .map( (el) =>\r\n                            <tr>\r\n                                <td className=\"align-middle\">{el.id}</td>\r\n                                <td>{el.name}</td>\r\n                                <td>{el.class}</td>\r\n                                <td>{el.QuaTang}</td>\r\n                                <td className=\"align-middle\"><Form.Check className=\"mb-3\" type=\"switch\" onChange={console.log(\"first\")} defaultChecked={true}/> </td>\r\n                            </tr>\r\n                            )\r\n                            }\r\n                        <tr >\r\n                        <td colSpan={5}>\r\n                        <Pagination className=\"mb-0\">\r\n                        {items.map( (el) =>  <Pagination.Item onClick={ (e)=> set_page(Number(e.target.text)) } key={el} active = {el === page}> {el}</Pagination.Item>\r\n                        )\r\n                        }\r\n                        </Pagination>\r\n                        </td>\r\n                        </tr>\r\n\r\n\r\n                            </tbody>\r\n                        </Table>\r\n\r\n                        <label className=\"form-label\" style={{fontWeight: \"bold\"}}>Upload Hình Ảnh CCCD *</label>\r\n                        <Form.Control required type=\"file\" multiple={true} accept=\"image/*\"  disabled={false} onChange={e => setSelectedFile(e.target.files)}></Form.Control>\r\n\r\n                        <Button className=\"mt-2 mb-2 border-0\"  type=\"button\" onClick ={ (e) => hand_upload_files() } style={{width: \"100%\", backgroundColor:\"#00A79D\"}}>Upload files</Button>\r\n\r\n                        <div className=\"text-center\">\r\n                        <Button onClick={startRecording} disabled={recording} variant=\"primary\">\r\n                            Start Recording\r\n                        </Button>\r\n                        <Button onClick={stopRecording} disabled={!recording} variant=\"danger\" className=\"mx-2\">\r\n                            Stop Recording\r\n                        </Button>\r\n                        <Button \r\n                        // onClick={uploadAudio} \r\n                        disabled={!audioBlob} variant=\"success\">\r\n                            Upload Audio\r\n                        </Button>\r\n\r\n                    {recording && (\r\n                            <div className=\"mt-3\">\r\n                            <p><strong>Recording...</strong></p>\r\n                            <p>Start Time: {startTime ? startTime.toLocaleTimeString() : \"--:--:--\"}</p>\r\n                            <p>End Time: {endTime ? endTime.toLocaleTimeString() : \"--:--:--\"}</p>\r\n                            <p>Time Remaining: {countdown}s</p>\r\n                            </div>\r\n                        )}\r\n\r\n                        {audioBlob && (\r\n                            <div className=\"mt-3\">\r\n                            <p><strong>Recorded Audio:</strong></p>\r\n                            <audio controls>\r\n                                <source src={URL.createObjectURL(audioBlob)} type=\"audio/wav\" />\r\n                                Your browser does not support the audio element.\r\n                            </audio>\r\n                            </div>\r\n                        )}\r\n                        </div>\r\n\r\n                        <div className=\"d-flex justify-content-center mt-2\">\r\n                        <Button onClick={removeAudio} variant=\"secondary\">\r\n                        Remove Audio\r\n                        </Button>\r\n                        </div>\r\n\r\n                        \r\n                        </Form>\r\n                        {/* END FORM BODY */}\r\n\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n    \r\n            <div>\r\n                <h1 className=\"text-danger text-center\">Xử Lý Thông Tin</h1>\r\n                <Spinner animation=\"border\" role=\"status\" style={{ height: \"100px\", width: \"100px\", margin: \"auto\", display: \"block\" }}>\r\n                </Spinner>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Template\r\n\r\n// https://www.geeksforgeeks.org/how-to-stretch-flexbox-to-fill-the-entire-container-in-bootstrap/\r\n\r\n// const on_click_them_san_pham = (e) => {\r\n// const arr2 = [...lst_item];\r\n// const data = {\r\n// \"id\":sp_id,\r\n// \"name\":sp_sl,\r\n// }\r\n// arr2.push(data);\r\n// set_lst_item(arr2);\r\n// }\r\n\r\n// const on_click_xoa_san_pham = (idx) => {\r\n// console.log(idx);\r\n// const arr2 = lst_item.filter( (_, index) => index !== idx)\r\n// set_lst_item(arr2);\r\n// }\r\n\r\n// const on_click_xoa_san_pham = (idx) => {\r\n//     console.log(idx);\r\n//     const arr2 = lst_item.filter( (_, index) => index !== idx)\r\n//     set_lst_item(arr2);\r\n// }\r\n","/* eslint-disable */\r\nimport { useContext, useEffect, useState } from \"react\";\r\n// import { v4 as uuid } from 'uuid';\r\nimport './myvnp.css';\r\nimport { Link, useLocation  } from \"react-router-dom\";\r\nimport FeedbackContext from '../context/FeedbackContext'\r\nimport {\r\n    Button,\r\n    Col,\r\n    Row,\r\n    Container,\r\n    Dropdown,\r\n    Form,\r\n    Spinner,\r\n    InputGroup,\r\n    Stack,\r\n    FloatingLabel,\r\n    Table,\r\n    Card,\r\n    Modal\r\n\r\n} from \"react-bootstrap\";\r\n\r\nfunction TemplateSimple( {history} ) {\r\n    const location = useLocation();\r\n    const queryParams = new URLSearchParams(location.search);\r\n    const { get_id, Inserted_at, removeAccents, userLogger, loading, SetLoading, formatDate, alert, alertText, alertType, SetALert, SetALertText, SetALertType } = useContext(FeedbackContext);\r\n    const fetch_initial_data = async (manv) => {\r\n        SetLoading(true)\r\n        const response = await fetch(`https://bi.meraplion.com/local/template/?manv=${queryParams.get('manv')}`)\r\n        // const response = await fetch(`https://bi.meraplion.com/local/get_form_claim_chi_phi/?manv=MR0673`)\r\n        if (!response.ok) {\r\n            SetLoading(false)\r\n        }\r\n        else {\r\n        const data = await response.json()\r\n        // set_data_kh_chung(data['data_kh_chung'])\r\n        // set_data_hcp(data['data_hcp'])\r\n        // set_manv_info(data['manv_info'][0])\r\n        console.log(data);\r\n        SetLoading(false);\r\n\r\n        }\r\n    }\r\n\r\n    \r\n    const [count, setCount] = useState(0);\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"userInfo\")) {\r\n        const media = window.matchMedia('(max-width: 960px)');\r\n        const isMB = (media.matches);\r\n        const dv_width = window.innerWidth;\r\n        userLogger(JSON.parse(localStorage.getItem(\"userInfo\")).manv, location.pathname, isMB, dv_width);\r\n        set_manv(JSON.parse(localStorage.getItem(\"userInfo\")).manv);\r\n        fetch_initial_data( JSON.parse(localStorage.getItem(\"userInfo\")).manv );\r\n        } else {\r\n            history.push(`/login?redirect=${location.pathname}`);\r\n        };\r\n    }, []);\r\n\r\n    const [manv, set_manv] = useState(\"\");\r\n    const current_date = formatDate(Date());\r\n    const [text, set_text] = useState(\"\");\r\n    const [number, set_number] = useState(\"\");\r\n    const [onDate, setDate] = useState(current_date);\r\n\r\n    const clear_data = () => {\r\n    }\r\n\r\n    const post_form_data = async (data) => {\r\n        SetLoading(true)\r\n        const response = await fetch(`https://bi.meraplion.com/local/template/`, {\r\n            method: \"POST\",\r\n            headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(data),\r\n        });\r\n\r\n        if (!response.ok) {\r\n            SetLoading(false);\r\n            const data = await response.json();\r\n            console.log(data);\r\n            SetALert(true);\r\n            SetALertType(\"alert-danger\");\r\n            SetALertText(\"CHƯA TẠO ĐƯỢC\");\r\n            setTimeout(() => SetALert(false), 3000);\r\n        } else {\r\n            SetLoading(false);\r\n            const data = await response.json();\r\n            console.log(data);\r\n            SetALert(true);\r\n            SetALertType(\"alert-success\");\r\n            SetALertText(\"ĐÃ TẠO THÀNH CÔNG\");\r\n            setTimeout(() => SetALert(false), 3000);\r\n            clear_data();\r\n            setCount(count+1);\r\n\r\n        }\r\n    }\r\n\r\n    const handle_submit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const data = {\r\n\r\n        }\r\n        console.log(data);\r\n        post_form_data(data);\r\n    }\r\n\r\n    if (!loading) {\r\n        return (\r\n        <Container className=\"bg-teal-100 h-100\" fluid>\r\n            <Row className=\"justify-content-center\">\r\n                <Col md={5} >\r\n\r\n                    <div>\r\n\r\n                        {/* ALERT COMPONENT */}\r\n                        <Modal show={loading} centered aria-labelledby=\"contained-modal-title-vcenter\" size=\"sm\">\r\n                            <Button variant=\"secondary\" disabled> <Spinner animation=\"grow\" size=\"sm\"/> Đang tải...</Button>\r\n\r\n                        {alert &&\r\n                        <div className={`alert ${alertType} alert-dismissible mt-2`} role=\"alert\" >\r\n                            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\">\r\n                            </button>\r\n                            <span><strong>Cảnh Báo:  </strong>{alertText}</span>\r\n                        </div>\r\n                        }\r\n                        </Modal>\r\n\r\n                        <Form onSubmit={handle_submit}>\r\n                        {/* START FORM BODY */}\r\n                        \r\n                        {/* TEXT */}\r\n                        <FloatingLabel label=\"TEXT\" className=\"border rounded mt-2\" > <Form.Control required type=\"text\" className=\"\" placeholder=\"\" onChange={ (e) => set_text(e.target.value) } value = {text}/> </FloatingLabel>\r\n                        \r\n                        {/* NUMBER */}\r\n                        <FloatingLabel label=\"NUMBER\" className=\"border rounded mt-2\" > <Form.Control required type=\"number\" className=\"\" placeholder=\"\" onChange={ (e) => set_number(e.target.value) } value = {number} /> </FloatingLabel>\r\n                        \r\n                        {/* DATE */}\r\n                        <FloatingLabel label=\"DATE\" className=\"border rounded mt-2\" > <Form.Control required type=\"date\" className=\"\" placeholder=\"\" onChange={(e) => setDate(e.target.value)} value={onDate} /> </FloatingLabel>\r\n                        \r\n                        <Button disabled={false} className='mt-2' variant=\"warning\" type=\"submit\" style={{width: \"100%\", fontWeight: \"bold\"}}> LƯU THÔNG TIN </Button>\r\n                        </Form>\r\n                        {/* END FORM BODY */}\r\n\r\n                        {/* CARDS IF NEEDED */}\r\n\r\n                        {/* <Card>\r\n                            <Card.Body>\r\n                            <Card.Title>Card Title</Card.Title>\r\n                                <Card.Text>\r\n                                Some quick example text to build on the card title and make up the\r\n                                bulk of the card's content.\r\n                                </Card.Text>\r\n                                <Button size=\"sm\" variant=\"primary\">Go somewhere</Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n\r\n                        <InputGroup className=\"ml-1\">\r\n                            <Form.Control type=\"text\" className=\"\" placeholder=\"ĐCCN ĐẾN THÁNG\"  />\r\n                            <Form.Control type=\"text\" className=\"\" placeholder=\"MÃ KH\" />\r\n                        </InputGroup> */}\r\n\r\n                        \r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n    \r\n            <div>\r\n                <h1 className=\"text-danger text-center\">Xử Lý Thông Tin</h1>\r\n                <Spinner animation=\"border\" role=\"status\" style={{ height: \"100px\", width: \"100px\", margin: \"auto\", display: \"block\" }}>\r\n                </Spinner>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default TemplateSimple","/* eslint-disable */\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport Select from \"react-select\";\r\n// import './myvnp.css';\r\nimport { Link, useLocation  } from \"react-router-dom\";\r\nimport FeedbackContext from '../context/FeedbackContext';\r\nimport {\r\n    // ButtonGroup,\r\n    Modal,\r\n    Button,\r\n    Col,\r\n    Row,\r\n    Container,\r\n    Form,\r\n    Spinner,\r\n    Table,\r\n    ListGroup\r\n} from \"react-bootstrap\";\r\nconst Duckdb = () => {\r\n\r\n  const { get_id, Inserted_at, removeAccents, userLogger, loading, SetLoading, formatDate, alert, alertText, alertType, SetALert, SetALertText, SetALertType } = useContext(FeedbackContext);\r\n\r\n  const fetch_initial_data = async (manv) => {\r\n    SetLoading(true)\r\n    const response = await fetch(`https://bi.meraplion.com/local/get_all_duckdb_files/`)\r\n    if (!response.ok) {\r\n        SetLoading(false)\r\n    }\r\n    else {\r\n    const data = await response.json()\r\n    setDbFiles(data['db_files'])\r\n    console.log(data);\r\n    SetLoading(false);\r\n\r\n    }\r\n  }\r\n\r\n  const [count, setCount] = useState(0);\r\n  useEffect(() => {\r\n      if (localStorage.getItem(\"userInfo\")) {\r\n      const media = window.matchMedia('(max-width: 960px)');\r\n      const isMB = (media.matches);\r\n      const dv_width = window.innerWidth;\r\n      // userLogger(JSON.parse(localStorage.getItem(\"userInfo\")).manv, location.pathname, isMB, dv_width);\r\n      // set_manv(JSON.parse(localStorage.getItem(\"userInfo\")).manv);\r\n      fetch_initial_data( JSON.parse(localStorage.getItem(\"userInfo\")).manv );\r\n      } else {\r\n          history.push(`/login?redirect=${location.pathname}`);\r\n      };\r\n  }, []);\r\n  const [dbFiles, setDbFiles] = useState([\r\n    { name: \"/app/thumuc/crm_hcp.db\", last_modified: \"2025-04-18 20:56:27\" },\r\n    { name: \"/app/thumuc/update_thu_hoi.db\", last_modified: \"2025-04-18 20:35:08\" },\r\n    { name: \"/app/thumuc/chi_phi_mkt_tp.db\", last_modified: \"2025-04-18 17:30:20\" }\r\n  ]);\r\n\r\n  // Example table data (replace this with actual fetched data)\r\n  const [dataTable, setDataTable] = useState([\r\n    {\r\n      'table_name': 'sales',\r\n      'schema': {\r\n        'col1': 'TEXT',\r\n        'col2': 'FLOAT',\r\n        'col3': 'TIMESTAMP'\r\n      }\r\n    },\r\n    {\r\n      'table_name': 'customer',\r\n      'schema': {\r\n        'id': 'FLOAT',\r\n        'name': 'TEXT',\r\n        'created_at': 'TIMESTAMP'\r\n      }\r\n    }\r\n  ]);\r\n\r\n  // States for managing selected file, selected table, query, and result\r\n  const [currentFile, setCurrentFile] = useState(null);\r\n  const [selectedTable, setSelectedTable] = useState(null);\r\n  const [sqlQuery, setSqlQuery] = useState(\"\");\r\n  const [excelUrl, setExcelUrl] = useState(\"\");\r\n  const [newDbFile, setNewDbFile] = useState({ name: \"\" });\r\n  const [showDbFiles, setShowDbFiles] = useState(false);  // Toggle for .db files\r\n\r\n  // States for modals\r\n  const [showExcelModal, setShowExcelModal] = useState(false);\r\n  const [showSchemaModal, setShowSchemaModal] = useState(false);\r\n  const [excelFileName, setExcelFileName] = useState(\"\");\r\n  const [tableName, setTableName] = useState(\"\");\r\n  const [schemaColumns, setSchemaColumns] = useState([{ columnName: \"\", dataType: \"VARCHAR\", isPrimaryKey: false }]);  // Default type is TEXT\r\n  const [excelFile, setExcelFile] = useState(null); // State to store the uploaded Excel file\r\n  const [bq_table, set_bq_table] = useState(null);\r\n  const [db_table, set_db_table] = useState(null);\r\n  // Handle SQL query input change\r\n  const handleSqlChange = (e) => {\r\n    setSqlQuery(e.target.value);\r\n  };\r\n\r\n  // Handle editing a file (set current file to edit)\r\n  const handleEdit = async (file) => {\r\n    setCurrentFile(file);\r\n    setSqlQuery(\"\"); // Reset SQL query input\r\n    setSelectedTable(null); // Reset the selected table\r\n    setExcelUrl(\"\"); // Reset the excel URL\r\n\r\n    try {\r\n      // Send POST request with file_path:filename to get tables and schema\r\n      const response = await fetch(\"https://bi.meraplion.com/local/get_duckdb_tables_and_schemas/\", { \r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          file_path: file.name\r\n        })\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        console.log(\"Fetched Data:\", data);\r\n        setDataTable(data.tabledata);\r\n        // setDataTable(data.tabledata);\r\n      } else {\r\n        console.error(\"Error fetching tables and schema.\");\r\n        alert(\"Failed to fetch tables and schema.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n      alert(\"An error occurred while fetching the file details.\");\r\n    }\r\n\r\n        // Focus on the Tables section when a file is selected using the id\r\n        const tablesHeading = document.getElementById(\"tables-heading\");\r\n        if (tablesHeading) {\r\n          tablesHeading.scrollIntoView({ behavior: 'smooth' });\r\n        }\r\n  };\r\n\r\n  // Handle selecting a table\r\n  const handleTableSelect = (table) => {\r\n    setSelectedTable(table);\r\n  };\r\n\r\n  // Handle running the SQL query\r\n  const handleRunQuery = async () => {\r\n    if (!sqlQuery || !currentFile) {\r\n      window.alert(\"Please enter an SQL query.\");\r\n      return;\r\n    }\r\n    setExcelUrl(\"\")\r\n    SetLoading(true); // Set loading to true before sending the request\r\n\r\n    // Send the SQL query to the backend (this is just an example)\r\n    try {\r\n      const response = await fetch(\"https://bi.meraplion.com/local/get_query_result/\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          id: get_id(),\r\n          query: sqlQuery,\r\n          file_path: currentFile.name,\r\n          bq_table: bq_table,\r\n          db_table: db_table\r\n        })\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (data && data.excel_url) {\r\n        setExcelUrl(data.excel_url);\r\n      } else {\r\n        window.alert(\"No result found or error from the backend.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error running query:\", error);\r\n      window.alert(error);\r\n    }\r\n\r\n    finally {\r\n      SetLoading(false); // Ensure loading is turned off regardless of success or failure\r\n    }\r\n\r\n    // SetLoading(false);\r\n  };\r\n\r\n  // Handle adding a new .db file\r\n  const handleAddDbFile = () => {\r\n    if (!newDbFile.name) {\r\n      window.alert(\"Please provide a valid .db file name.\");\r\n      return;\r\n    }\r\n\r\n    // Add new .db file to the list\r\n    const newFile = { name: newDbFile.name, last_modified: new Date().toISOString() };\r\n    setDbFiles([...dbFiles, newFile]);\r\n    setNewDbFile({ name: \"\" }); // Reset the input field\r\n  };\r\n\r\n  // Toggle visibility of the .db files table\r\n  const toggleDbFilesVisibility = () => {\r\n    setShowDbFiles(!showDbFiles);\r\n  };\r\n\r\n  // Modal for adding Excel file and table name\r\n  const handleExcelModalClose = () => setShowExcelModal(false);\r\n  const handleExcelModalShow = () => setShowExcelModal(true);\r\n\r\n  // Handle Excel file change (when file is selected)\r\n  const handleExcelFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file && file.type === \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\") {\r\n      setExcelFile(file);\r\n    } else {\r\n      window.alert(\"Please upload a valid Excel file.\");\r\n    }\r\n  };\r\n\r\n  // Handle submitting Excel file, table name, and db file path\r\n  const handleExcelSubmit = async () => {\r\n    if (!excelFile || !tableName || !currentFile) {\r\n      alert(\"Please fill in all fields.\");\r\n      return;\r\n    }\r\n\r\n    // Prepare the data to send to the backend\r\n    const formData = new FormData();\r\n    formData.append(\"excelFile\", excelFile);\r\n    formData.append(\"tableName\", tableName);\r\n    formData.append(\"dbFilePath\", currentFile.name);\r\n\r\n    try {\r\n      const response = await fetch(\"YOUR_BACKEND_URL_HERE\", {\r\n        method: \"POST\",\r\n        body: formData\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (data && data.success) {\r\n        window.alert(\"Excel file and table name successfully submitted.\");\r\n      } else {\r\n        window.alert(\"Error submitting data.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error uploading Excel file:\", error);\r\n      window.alert(\"Error occurred while uploading the Excel file.\");\r\n    }\r\n\r\n    handleExcelModalClose(); // Close the modal after submission\r\n  };\r\n\r\n  // Modal for adding schema manually\r\n  const handleSchemaModalClose = () => setShowSchemaModal(false);\r\n  const handleSchemaModalShow = () => setShowSchemaModal(true);\r\n\r\n  const handleAddSchema = async () => {\r\n    console.log(\"Schema Columns:\", schemaColumns);\r\n  \r\n    // Prepare data to send to backend\r\n    const schemaData = {\r\n      file_path: currentFile.name,\r\n      table_name: tableName,  // Add the table name to the data\r\n      columns: schemaColumns.map((col) => ({\r\n        column_name: col.columnName,\r\n        data_type: col.dataType,\r\n        is_primary_key: col.isPrimaryKey\r\n      }))\r\n    };\r\n  \r\n    try {\r\n      // Send POST request to backend to create table\r\n      const response = await fetch(\"https://bi.meraplion.com/local/create_table_manually/\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(schemaData),\r\n      });\r\n  \r\n      // Check if the response status is OK\r\n      if (!response.ok) {\r\n        // If response is not ok, throw an error (this will be caught in the catch block)\r\n        throw new Error(`Backend returned status: ${response.status}`);\r\n      }\r\n  \r\n      // Parse the JSON response\r\n      const data = await response.json();\r\n      \r\n      // Check if the backend response indicates success\r\n      if (data.success) {\r\n        console.log(\"Table created successfully:\", data);\r\n        // alert(\"Table created successfully.\");\r\n      } else {\r\n        console.error(\"Error in backend response:\", data.message);\r\n        // alert(`Error: ${data.message}`);\r\n      }\r\n  \r\n    } catch (error) {\r\n      // This block will only be triggered if there is an issue with the network or response\r\n      console.error(\"Error sending data to backend:\", error);\r\n      // alert(\"An error occurred while sending data to the backend.\");\r\n    }\r\n  \r\n    // Close the schema modal after submitting\r\n    setShowSchemaModal(false); // Hide modal\r\n  };\r\n  \r\n\r\n  const handleSchemaChange = (index, field, value) => {\r\n    const newColumns = [...schemaColumns];\r\n    newColumns[index][field] = value;\r\n    setSchemaColumns(newColumns);\r\n  };\r\n\r\n  const handleAddColumn = () => {\r\n    setSchemaColumns([...schemaColumns, { columnName: \"\", dataType: \"VARCHAR\", isPrimaryKey: false }]);\r\n  };\r\n\r\n  const handleRemoveColumn = (index) => {\r\n    const newColumns = schemaColumns.filter((_, i) => i !== index);\r\n    setSchemaColumns(newColumns);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Button to toggle visibility of the .db files table */}\r\n      <Button variant=\"primary\" onClick={toggleDbFilesVisibility} className=\"mt-3\">\r\n        {showDbFiles ? \"Hide .db Files\" : \"Show .db Files\"}\r\n      </Button>\r\n\r\n {/* Row with two columns: Left for .db Files Table, Right for Add .db File Form */}\r\n <Row className=\"mt-4\">\r\n        <Col md={6}>\r\n          {/* .db Files Table */}\r\n          {showDbFiles && (\r\n            <>\r\n              <h4>Available .db Files</h4>\r\n              <Table striped bordered hover>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Name</th>\r\n                    <th>Last Modified</th>\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {dbFiles.map((dbFile, index) => (\r\n                    <tr key={index}>\r\n                      <td>{dbFile.name}</td>\r\n                      <td>{dbFile.last_modified}</td>\r\n                      <td>\r\n                      <Button variant=\"info\" onClick={() => handleEdit(dbFile)}>\r\n                          Edit\r\n                        </Button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n            </>\r\n          )}\r\n        </Col>\r\n\r\n        <Col md={6}>\r\n          {/* Enter New .db File Path Part */}\r\n          <h4>Enter New .db File Path</h4>\r\n          <Form>\r\n            <Form.Group controlId=\"formDbName\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={newDbFile.name}\r\n                onChange={(e) => setNewDbFile({ name: e.target.value })}\r\n                placeholder=\"Enter .db file path\"\r\n              />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" onClick={handleAddDbFile}>\r\n              Add .db File\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Left Section: Tables and Schema Modals */}\r\n      {currentFile && (\r\n        <Row className=\"mt-4\">\r\n          <Col md={6}>\r\n            <h4 id=\"tables-heading\" >Tables in {currentFile.name}</h4>\r\n            <ListGroup>\r\n              {dataTable.map((table, index) => (\r\n                <ListGroup.Item\r\n                  key={index}\r\n                  onClick={() => handleTableSelect(table)}\r\n                  style={{\r\n                    cursor: \"pointer\",\r\n                    backgroundColor: selectedTable === table ? \"#e0f7fa\" : \"white\"\r\n                  }}\r\n                >\r\n                  {table.table_name}\r\n                </ListGroup.Item>\r\n              ))}\r\n            </ListGroup>\r\n\r\n            {/* Show Schema when a table is selected */}\r\n            {selectedTable && (\r\n              <>\r\n                <h5>Schema for {selectedTable.table_name}</h5>\r\n                <Table striped bordered hover>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Column Name</th>\r\n                      <th>Data Type</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {Object.entries(selectedTable.schema).map(([colName, colType], index) => (\r\n                      <tr key={index}>\r\n                        <td>{colName}</td>\r\n                        <td>{colType}</td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </Table>\r\n              </>\r\n            )}\r\n\r\n            {/* Add Excel File and Table Name Modal Trigger */}\r\n            <Button variant=\"outline-secondary\" size=\"sm\" onClick={handleExcelModalShow} className=\"mt-2\">\r\n            + Add Excel File and Table\r\n            </Button>\r\n\r\n            {/* Add Schema Manually Modal Trigger */}\r\n            <Button variant=\"outline-secondary\" size=\"sm\" onClick={handleSchemaModalShow} className=\"mt-2\">\r\n              + Add Schema Manually\r\n            </Button>\r\n          </Col>\r\n\r\n          <Col md={6}>\r\n            {/* SQL Query Input Section */}\r\n            <h4>SQL Query for {currentFile.name}</h4>\r\n            <Form>\r\n              <Form.Group controlId=\"formSqlQuery\">\r\n                <Form.Control\r\n                  style={{ height: '300px' }}\r\n                  as=\"textarea\"\r\n                  rows={5}\r\n                  value={sqlQuery}\r\n                  onChange={handleSqlChange}\r\n                  placeholder=\"Enter your SQL query here\"\r\n                />\r\n              </Form.Group>\r\n            <div className=\"d-flex align-items-center mt-3\">\r\n              <Button variant=\"success\" onClick={handleRunQuery} disabled={loading}>\r\n                Run Query\r\n              </Button>\r\n              <Form.Control\r\n                type=\"text\"\r\n                style={{ width: '100px', margin: '0 10px' }} // 100px ~ 3cm\r\n                placeholder=\"BQ Table\"\r\n                value={bq_table}\r\n                onChange={(e) => set_bq_table(e.target.value) }\r\n              />\r\n              <Button variant=\"primary\" onClick={handleRunQuery} disabled={loading}>\r\n                Move to BQ\r\n              </Button>\r\n              <Form.Control\r\n                type=\"text\"\r\n                style={{ width: '100px', margin: '0 10px' }} // 100px ~ 3cm\r\n                placeholder=\"DB Table\"\r\n                value={bq_table}\r\n                onChange={(e) => set_db_table(e.target.value) }\r\n              />\r\n              <Button variant=\"danger\" onClick={handleRunQuery} disabled={loading}>\r\n                Move to DB\r\n              </Button>\r\n            </div>\r\n            </Form>\r\n\r\n            {/* Display the Excel URL if available */}\r\n            {excelUrl && (\r\n              <div className=\"mt-3\">\r\n                <h5>Excel File Available:</h5>\r\n                <a href={excelUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  {excelUrl}\r\n                </a>\r\n              </div>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      )}\r\n\r\n      {/* Modals */}\r\n      {/* Excel File and Table Name Modal */}\r\n      <Modal show={showExcelModal} onHide={handleExcelModalClose} size=\"lg\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add Excel File and Table Name</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group controlId=\"formExcelFile\">\r\n              <Form.Label>Upload Excel File</Form.Label>\r\n              <Form.Control\r\n                type=\"file\"\r\n                accept=\".xlsx, .xls\"\r\n                onChange={handleExcelFileChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formTableName\">\r\n              <Form.Label>Table Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={tableName}\r\n                onChange={(e) => setTableName(e.target.value)}\r\n                placeholder=\"Enter table name\"\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleExcelModalClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleExcelSubmit}>\r\n            Upload\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n        {/* Schema Manual Modal */}\r\n        <Modal show={showSchemaModal} onHide={handleSchemaModalClose} size=\"lg\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add Schema Manually</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            {/* Table Name Input */}\r\n            <Form.Group controlId=\"formTableName\" className=\"mb-2\">\r\n              <Form.Label>Table Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={tableName}\r\n                onChange={(e) => setTableName(e.target.value)}\r\n                placeholder=\"Enter table name\"\r\n              />\r\n            </Form.Group>\r\n\r\n            {/* Schema Columns */}\r\n            {schemaColumns.map((column, index) => (\r\n              <Row key={index} className=\"mb-2\">\r\n                <Col>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={column.columnName}\r\n                    onChange={(e) => handleSchemaChange(index, \"columnName\", e.target.value)}\r\n                    placeholder=\"Column Name\"\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    value={column.dataType}\r\n                    onChange={(e) => handleSchemaChange(index, \"dataType\", e.target.value)}\r\n                  >\r\n                    <option value=\"TEXT\">VARCHAR</option>\r\n                    <option value=\"INTEGER\">INTEGER</option>\r\n                    <option value=\"FLOAT\">DOUBLE</option>\r\n                    <option value=\"TIMESTAMP\">TIMESTAMP</option>\r\n                  </Form.Control>\r\n                </Col>\r\n                <Col md=\"auto\">\r\n                  <Form.Check\r\n                    type=\"checkbox\"\r\n                    label=\"Primary Key\"\r\n                    checked={column.isPrimaryKey || false}\r\n                    onChange={(e) => handleSchemaChange(index, \"isPrimaryKey\", e.target.checked)}\r\n                  />\r\n                </Col>\r\n                <Col md=\"auto\">\r\n                  <Button variant=\"danger\" onClick={() => handleRemoveColumn(index)}>\r\n                    Remove\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            ))}\r\n            <Button variant=\"link\" onClick={handleAddColumn}>\r\n              + Add Column\r\n            </Button>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleSchemaModalClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleAddSchema}>\r\n            Save Schema\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Duckdb;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const response = await fetch(\"https://bi.meraplion.com/local/create_duckdb_file/\", {","import { Card, Container, Row, Col } from 'react-bootstrap';\r\nimport {\r\n  FaUserMd,\r\n  FaPlusCircle,\r\n  FaGift,\r\n  FaCogs\r\n} from 'react-icons/fa';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst NavigationCards = () => {\r\n  const history = useHistory(); // ✅ React Router v5 dùng useHistory\r\n\r\n  // Danh sách các mục điều hướng có thêm icon\r\n  const items = [\r\n    {\r\n      stt: 1,\r\n      title: 'Danh sách HCP',\r\n      description: 'Đây là danh sách HCP.',\r\n      path: '/danh-sach-hcp',\r\n      icon: <FaUserMd size={28} color=\"#007bff\" />\r\n    },\r\n    {\r\n      stt: 2,\r\n      title: 'Tạo mới HCP/PCL',\r\n      description: 'Phân tích dữ liệu theo từng khu vực.',\r\n      path: '/phan-tich-khu-vuc',\r\n      icon: <FaPlusCircle size={28} color=\"#28a745\" />\r\n    },\r\n    {\r\n      stt: 3,\r\n      title: 'Booking chi phí quà tặng HCP',\r\n      description: 'Xem báo cáo doanh thu theo quý.',\r\n      path: '/bao-cao-doanh-thu',\r\n      icon: <FaGift size={28} color=\"#ffc107\" />\r\n    },\r\n    {\r\n      stt: 4,\r\n      title: 'Booking chi phí Gimmick HCP',\r\n      description: 'Phân tích dữ liệu theo từng khu vực.',\r\n      path: '/phan-tich-khu-vuc',\r\n      icon: <FaCogs size={28} color=\"#6c757d\" />\r\n    }\r\n  ];\r\n\r\n  const sortedList = [...items].sort((a, b) => a.stt - b.stt);\r\n\r\n  return (\r\n    <Container fluid className=\"p-4\" style={{ backgroundColor: '#f8f9fa', minHeight: '100vh' }}>\r\n      <h5 className=\"mb-4 fw-bold\">Điều hướng</h5>\r\n      <Row xs={1} md={2} lg={2} className=\"g-4\">\r\n        {sortedList.map((item, index) => (\r\n          <Col key={index}>\r\n            <Card\r\n              className=\"shadow-sm\"\r\n              onClick={() => history.push(item.path)} // ✅ Đúng cú pháp React Router v5\r\n              style={{ cursor: 'pointer' }}\r\n            >\r\n              <Card.Body>\r\n                <div className=\"mb-2\">{item.icon}</div>\r\n                <Card.Title>{item.title}</Card.Title>\r\n                <Card.Text>{item.description}</Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default NavigationCards;","/* eslint-disable */\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport './myvnp.css';\r\nimport { Link, useLocation  } from \"react-router-dom\";\r\nimport FeedbackContext from '../context/FeedbackContext';\r\nimport {\r\n    // ButtonGroup,\r\n    Modal,\r\n    Button,\r\n    Col,\r\n    Row,\r\n    Container,\r\n    Form,\r\n    Spinner,\r\n    Table,\r\n    ListGroup\r\n} from \"react-bootstrap\";\r\nconst Postgres = ( {history} ) => {\r\n\r\n  const { get_id, Inserted_at, removeAccents, userLogger, loading, SetLoading, formatDate, alert, alertText, alertType, SetALert, SetALertText, SetALertType } = useContext(FeedbackContext);\r\n\r\n  const fetch_initial_data = async (manv) => {\r\n    SetLoading(true)\r\n    const response = await fetch(`https://bi.meraplion.com/local/get_data/`)\r\n    if (!response.ok) {\r\n        SetLoading(false)\r\n    }\r\n    else {\r\n    const data = await response.json()\r\n    // setDbFiles(data['db_files'])\r\n    setDbFiles([])\r\n    console.log(data);\r\n    SetLoading(false);\r\n\r\n    }\r\n  }\r\n\r\n  const [count, setCount] = useState(0);\r\n  useEffect(() => {\r\n      if (localStorage.getItem(\"userInfo\")) {\r\n      const media = window.matchMedia('(max-width: 960px)');\r\n      const isMB = (media.matches);\r\n      const dv_width = window.innerWidth;\r\n      // userLogger(JSON.parse(localStorage.getItem(\"userInfo\")).manv, location.pathname, isMB, dv_width);\r\n      // set_manv(JSON.parse(localStorage.getItem(\"userInfo\")).manv);\r\n      fetch_initial_data( JSON.parse(localStorage.getItem(\"userInfo\")).manv );\r\n      } else {\r\n          history.push(`/login?redirect=${location.pathname}`);\r\n      };\r\n  }, [count]);\r\n  const [dbFiles, setDbFiles] = useState([\r\n    // { name: \"/app/thumuc/crm_hcp.db\", last_modified: \"2025-04-18 20:56:27\" },\r\n    // { name: \"/app/thumuc/update_thu_hoi.db\", last_modified: \"2025-04-18 20:35:08\" },\r\n    // { name: \"/app/thumuc/chi_phi_mkt_tp.db\", last_modified: \"2025-04-18 17:30:20\" }\r\n  ]);\r\n\r\n  // Example table data (replace this with actual fetched data)\r\n  const [dataTable, setDataTable] = useState([\r\n    {\r\n      'table_name': 'sales',\r\n      'schema': {\r\n        'col1': 'TEXT',\r\n        'col2': 'FLOAT',\r\n        'col3': 'TIMESTAMP'\r\n      }\r\n    },\r\n    {\r\n      'table_name': 'customer',\r\n      'schema': {\r\n        'id': 'FLOAT',\r\n        'name': 'TEXT',\r\n        'created_at': 'TIMESTAMP'\r\n      }\r\n    }\r\n  ]);\r\n\r\n  // States for managing selected file, selected table, query, and result\r\n  const [currentFile, setCurrentFile] = useState(\"\");\r\n  const [selectedTable, setSelectedTable] = useState({});\r\n  const [sqlQuery, setSqlQuery] = useState(\"\");\r\n  const [excelUrl, setExcelUrl] = useState(\"\");\r\n  const [newDbFile, setNewDbFile] = useState({ name: \"\" });\r\n  const [showDbFiles, setShowDbFiles] = useState(false);  // Toggle for .db files\r\n\r\n  // States for modals\r\n  const [showExcelModal, setShowExcelModal] = useState(false);\r\n  const [showSchemaModal, setShowSchemaModal] = useState(false);\r\n  const [excelFileName, setExcelFileName] = useState(\"\");\r\n  const [tableName, setTableName] = useState(\"\");\r\n  const [schemaColumns, setSchemaColumns] = useState([]);  // Default type is TEXT\r\n  const [excelFile, setExcelFile] = useState(\"\"); // State to store the uploaded Excel file\r\n  const [actionType, setActionType] = useState('create');\r\n  // const [bq_table, set_bq_table] = useState(\"\");\r\n  // const [db_table, set_db_table] = useState(\"\");\r\n  // Handle SQL query input change\r\n  const handleSqlChange = (e) => {\r\n    setSqlQuery(e.target.value);\r\n  };\r\n\r\n  // Handle editing a file (set current file to edit)\r\n  const handleEdit = async (table) => {\r\n    console.log(\"dataTable\", table)\r\n    setCurrentFile(table);\r\n    setSqlQuery(\"\"); // Reset SQL query input\r\n    setSelectedTable(\"\"); // Reset the selected table\r\n    setExcelUrl(\"\"); // Reset the excel URL\r\n\r\n    try {\r\n      // Send POST request with file_path:filename to get tables and schema\r\n      const response = await fetch(\"https://bi.meraplion.com/local/get_pg_tables_and_schemas/\", { \r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          file_path: table.name\r\n        })\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        console.log(\"Fetched Data:\", data);\r\n        setDataTable(data.tabledata);\r\n        setSelectedTable(data.tabledata[0]);\r\n      } else {\r\n        console.error(\"Error fetching tables and schema.\");\r\n        window.alert(\"Failed to fetch tables and schema.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n      window.alert(\"An error occurred while fetching the file details.\");\r\n    }\r\n\r\n        // Focus on the Tables section when a file is selected using the id\r\n        const tablesHeading = document.getElementById(\"tables-heading\");\r\n        if (tablesHeading) {\r\n          tablesHeading.scrollIntoView({ behavior: 'smooth' });\r\n        }\r\n  };\r\n\r\n  // Handle selecting a table\r\n  const handleTableSelect = (table) => {\r\n    console.log(\"handleTableSelect\", table)\r\n    setSelectedTable(table);\r\n  };\r\n\r\n  // Handle running the SQL query\r\n  const handleRunQuery = async () => {\r\n    if (!sqlQuery) {\r\n      window.alert(\"Please enter an SQL query.\");\r\n      return;\r\n    }\r\n    setExcelUrl(\"\")\r\n    SetLoading(true); // Set loading to true before sending the request\r\n\r\n    // Send the SQL query to the backend (this is just an example)\r\n    try {\r\n      const response = await fetch(\"https://bi.meraplion.com/local/get_pg_query_result/\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          id: get_id(),\r\n          query: sqlQuery,\r\n          file_path: currentFile.name,\r\n          // bq_table: bq_table,\r\n          // db_table: db_table\r\n        })\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setExcelUrl(data.excel_url);\r\n        window.alert(\"Thành công !!!\");\r\n        setCount(count+1);\r\n      } else {\r\n        window.alert(data.error_message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error running query:\", error);\r\n      window.alert(error);\r\n    }\r\n\r\n    finally {\r\n      SetLoading(false); // Ensure loading is turned off regardless of success or failure\r\n    }\r\n\r\n    // SetLoading(false);\r\n  };\r\n\r\n  // Handle adding a new .db file\r\n  // const handleAddDbFile = () => {\r\n  //   if (!newDbFile.name) {\r\n  //     window.alert(\"Please provide a valid .db file name.\");\r\n  //     return;\r\n  //   }\r\n  //   const newFile = { name: newDbFile.name, last_modified: new Date().toISOString() };\r\n  //   setDbFiles([...dbFiles, newFile]);\r\n  //   setNewDbFile({ name: \"\" });\r\n  // };\r\n\r\n  // Toggle visibility of the .db files table\r\n  // const toggleDbFilesVisibility = () => {\r\n  //   setShowDbFiles(!showDbFiles);\r\n  // };\r\n\r\n  // Modal for adding Excel file and table name\r\n  const handleExcelModalClose = () => setShowExcelModal(false);\r\n  const handleExcelModalShow = () => setShowExcelModal(true);\r\n\r\n  // Handle Excel file change (when file is selected)\r\n  const handleExcelFileChange = async (e) => {\r\n    const file = e.target.files[0];\r\n    if (file && file.type === \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\") {\r\n      setExcelFile(file);\r\n      const formData = new FormData();\r\n      formData.append(\"tablename\", tableName);\r\n      formData.append(\"excelFile\", file);\r\n\r\n    try {\r\n      const response = await fetch(\"https://bi.meraplion.com/local/check_excel_pg/\", {\r\n        method: \"POST\",\r\n        body: formData\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setSchemaColumns(data['column_info'])\r\n      } else {\r\n        window.alert(\"Error submitting data.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error uploading Excel file:\", error);\r\n      window.alert(\"Error occurred while uploading the Excel file.\");\r\n    }\r\n\r\n    } else {\r\n      window.alert(\"Please upload a valid Excel file.\");\r\n    }\r\n  };\r\n\r\n  // Handle submitting Excel file, table name, and db file path\r\n  const handleExcelSubmit = async () => {\r\n    if (!excelFile || !tableName ) {\r\n      window.alert(\"Please fill in all fields.\");\r\n      return;\r\n    }\r\n\r\n    // Prepare the data to send to the backend\r\n    const formData = new FormData();\r\n    formData.append(\"excelFile\", excelFile);\r\n    formData.append(\"tablename\", tableName);\r\n    formData.append(\"actiontype\", actionType);\r\n    formData.append(\"schema\", JSON.stringify(schemaColumns));\r\n    try {\r\n      const response = await fetch(\"https://bi.meraplion.com/local/create_table_pg/\", {\r\n        method: \"POST\",\r\n        body: formData\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        window.alert(\"Excel file and table name successfully submitted.\");\r\n      // ✅ Reset state\r\n      setExcelFile(null);\r\n      setTableName('');\r\n      setSchemaColumns([]);\r\n      setCount(count+1);\r\n\r\n      } else {\r\n        window.alert(\"Error submitting data.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error uploading Excel file:\", error);\r\n      window.alert(\"Error occurred while uploading the Excel file.\");\r\n    }\r\n\r\n    handleExcelModalClose(); // Close the modal after submission\r\n  };\r\n\r\n  // Modal for adding schema manually\r\n  const handleSchemaModalClose = () => setShowSchemaModal(false);\r\n  const handleSchemaModalShow = () => setShowSchemaModal(true);\r\n\r\n  const handleAddSchema = async () => {\r\n    console.log(\"Schema Columns:\", schemaColumns);\r\n  \r\n    // Prepare data to send to backend\r\n    const schemaData = {\r\n      file_path: currentFile.name,\r\n      table_name: tableName,  // Add the table name to the data\r\n      columns: schemaColumns.map((col) => ({\r\n        column_name: col.columnName,\r\n        data_type: col.dataType,\r\n        is_primary_key: col.isPrimaryKey\r\n      }))\r\n    };\r\n  \r\n    try {\r\n      // Send POST request to backend to create table\r\n      const response = await fetch(\"https://bi.meraplion.com/local/create_table_manually/\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(schemaData),\r\n      });\r\n  \r\n      // Check if the response status is OK\r\n      if (!response.ok) {\r\n        // If response is not ok, throw an error (this will be caught in the catch block)\r\n        throw new Error(`Backend returned status: ${response.status}`);\r\n      }\r\n  \r\n      // Parse the JSON response\r\n      const data = await response.json();\r\n      \r\n      // Check if the backend response indicates success\r\n      if (data.success) {\r\n        console.log(\"Table created successfully:\", data);\r\n        // alert(\"Table created successfully.\");\r\n      } else {\r\n        console.error(\"Error in backend response:\", data.message);\r\n        // alert(`Error: ${data.message}`);\r\n      }\r\n  \r\n    } catch (error) {\r\n      // This block will only be triggered if there is an issue with the network or response\r\n      console.error(\"Error sending data to backend:\", error);\r\n      // alert(\"An error occurred while sending data to the backend.\");\r\n    }\r\n  \r\n    // Close the schema modal after submitting\r\n    setShowSchemaModal(false); // Hide modal\r\n  };\r\n  \r\n\r\n  const handleSchemaChange = (index, field, value) => {\r\n    const newColumns = [...schemaColumns];\r\n    newColumns[index][field] = value;\r\n    setSchemaColumns(newColumns);\r\n  };\r\n\r\n  const handleAddColumn = () => {\r\n    setSchemaColumns([...schemaColumns, { columnName: \"\", dataType: \"FLOAT\", isPrimaryKey: false }]);\r\n  };\r\n\r\n  const handleRemoveColumn = (index) => {\r\n    const newColumns = schemaColumns.filter((_, i) => i !== index);\r\n    setSchemaColumns(newColumns);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Button to toggle visibility of the .db files table */}\r\n      {/* <Button variant=\"primary\" onClick={toggleDbFilesVisibility} className=\"mt-3\">\r\n        {showDbFiles ? \"Hide Tables\" : \"Show Tables\"}\r\n      </Button> */}\r\n\r\n {/* Row with two columns: Left for .db Files Table, Right for Add .db File Form */}\r\n <Row className=\"mt-4\">\r\n        <Col md={6}>\r\n          {/* .db Files Table */}\r\n            <>\r\n              <h4>Available Tables</h4>\r\n              <Table striped bordered hover className=\"compact-table table-sm\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Name</th>\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {dbFiles.map((table, index) => (\r\n                    <tr key={index}>\r\n                      <td>{table.name}</td>\r\n                      <td>\r\n                      <Button variant=\"info\" size=\"sm\" onClick={() => handleEdit(table)}>\r\n                          Show Schema\r\n                        </Button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n            </>\r\n        </Col>\r\n\r\n        <Col md={6}>\r\n          {/* Enter New .db File Path Part */}\r\n          <h4>Upload new excel file</h4>\r\n          \r\n            <Button variant=\"outline-secondary\" size=\"sm\" onClick={handleExcelModalShow} className=\"mt-2\">\r\n            + Add Excel File and Table\r\n            </Button>\r\n\r\n            <h4>SQL Query </h4>\r\n            <Form>\r\n              <Form.Group controlId=\"formSqlQuery\">\r\n                <Form.Control\r\n                  style={{ height: '300px' }}\r\n                  as=\"textarea\"\r\n                  rows={5}\r\n                  value={sqlQuery}\r\n                  onChange={handleSqlChange}\r\n                  placeholder=\"Enter your SQL query here\"\r\n                />\r\n              </Form.Group>\r\n            <div className=\"d-flex align-items-center mt-3\">\r\n              <Button variant=\"success\" onClick={handleRunQuery} disabled={loading}>\r\n                Run Query\r\n              </Button>\r\n            </div>\r\n            </Form>\r\n\r\n            {excelUrl && (\r\n              <div className=\"mt-3\">\r\n                <h5>Excel File Available:</h5>\r\n                <a href={excelUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  {excelUrl}\r\n                </a>\r\n              </div>\r\n            )}\r\n\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Left Section: Tables and Schema Modals */}\r\n      {currentFile && (\r\n        <Row className=\"mt-4\">\r\n          <Col md={6}>\r\n            {/* <h4 id=\"tables-heading\" >Tables in {currentFile.name}</h4> */}\r\n            <ListGroup>\r\n              {dataTable.map((table, index) => (\r\n                <ListGroup.Item\r\n                  key={index}\r\n                  onClick={() => handleTableSelect(table)}\r\n                  style={{\r\n                    cursor: \"pointer\",\r\n                    backgroundColor: selectedTable === table ? \"#e0f7fa\" : \"white\"\r\n                  }}\r\n                >\r\n                  {table.table_name}\r\n                </ListGroup.Item>\r\n              ))}\r\n            </ListGroup>\r\n\r\n            {/* Show Schema when a table is selected */}\r\n            {selectedTable && (\r\n              <>\r\n                <h5>Schema for {selectedTable.table_name}</h5>\r\n                <Table striped bordered hover>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Column Name</th>\r\n                      <th>Data Type</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {Object.entries(selectedTable.schema).map(([colName, colType], index) => (\r\n                      <tr key={index}>\r\n                        <td>{colName}</td>\r\n                        <td>{colType}</td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </Table>\r\n              </>\r\n            )}\r\n\r\n            {/* Add Excel File and Table Name Modal Trigger */}\r\n            {/* <Button variant=\"outline-secondary\" size=\"sm\" onClick={handleExcelModalShow} className=\"mt-2\">\r\n            + Add Excel File and Table\r\n            </Button> */}\r\n\r\n            {/* Add Schema Manually Modal Trigger */}\r\n            {/* <Button variant=\"outline-secondary\" size=\"sm\" onClick={handleSchemaModalShow} className=\"mt-2\">\r\n              + Add Schema Manually\r\n            </Button> */}\r\n          </Col>\r\n\r\n          {/* <Col md={6}>\r\n            <h4>SQL Query for {currentFile.name}</h4>\r\n            <Form>\r\n              <Form.Group controlId=\"formSqlQuery\">\r\n                <Form.Control\r\n                  style={{ height: '300px' }}\r\n                  as=\"textarea\"\r\n                  rows={5}\r\n                  value={sqlQuery}\r\n                  onChange={handleSqlChange}\r\n                  placeholder=\"Enter your SQL query here\"\r\n                />\r\n              </Form.Group>\r\n            <div className=\"d-flex align-items-center mt-3\">\r\n              <Button variant=\"success\" onClick={handleRunQuery} disabled={loading}>\r\n                Run Query\r\n              </Button>\r\n            </div>\r\n            </Form>\r\n\r\n            {excelUrl && (\r\n              <div className=\"mt-3\">\r\n                <h5>Excel File Available:</h5>\r\n                <a href={excelUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  {excelUrl}\r\n                </a>\r\n              </div>\r\n            )}\r\n\r\n          </Col> */}\r\n        </Row>\r\n      )}\r\n\r\n      {/* Modals */}\r\n      {/* Excel File and Table Name Modal */}\r\n      <Modal show={showExcelModal} onHide={handleExcelModalClose} size=\"lg\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add Excel File and Table Name</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        {/* New Select for CREATE / INSERT */}\r\n        <Form.Group controlId=\"formActionType\" className=\"mb-3\">\r\n          <Form.Select value={actionType} onChange={(e) => setActionType(e.target.value)}  >\r\n            <option value=\"create\">CREATE New Table</option>\r\n            <option value=\"insert\">INSERT Into Existing Table</option>\r\n          </Form.Select>\r\n        </Form.Group>\r\n\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group controlId=\"formExcelFile\">\r\n              <Form.Label>Upload Excel File</Form.Label>\r\n              <Form.Control\r\n                type=\"file\"\r\n                accept=\".xlsx, .xls\"\r\n                onChange={handleExcelFileChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formTableName\">\r\n              <Form.Label>Table Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={tableName}\r\n                onChange={(e) => setTableName(e.target.value)}\r\n                placeholder=\"Enter table name\"\r\n              />\r\n            </Form.Group>\r\n\r\n            {/* Schema Columns */}\r\n            {schemaColumns.map((column, index) => (\r\n              <Row key={index} className=\"mb-2 mt-2\">\r\n                <Col>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={column.columnName}\r\n                    onChange={(e) => handleSchemaChange(index, \"columnName\", e.target.value)}\r\n                    placeholder=\"clean_column_name\"\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    value={column.dataType}\r\n                    onChange={(e) => handleSchemaChange(index, \"dataType\", e.target.value)}\r\n                  >\r\n                    <option value=\"FLOAT\">FLOAT</option>\r\n                    <option value=\"TIMESTAMP\">TIMESTAMP</option>\r\n                    <option value=\"INTEGER\">INTEGER</option>\r\n                    <option value=\"STRING\">STRING</option>\r\n                  </Form.Control>\r\n                </Col>\r\n                <Col md=\"auto\">\r\n                  <Form.Check\r\n                    type=\"checkbox\"\r\n                    label=\"Primary Key\"\r\n                    checked={column.isPrimaryKey || false}\r\n                    onChange={(e) => handleSchemaChange(index, \"isPrimaryKey\", e.target.checked)}\r\n                  />\r\n                </Col>\r\n                <Col md=\"auto\">\r\n                  <Button variant=\"danger\" onClick={() => handleRemoveColumn(index)}>\r\n                    Remove\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            ))}\r\n              <Button hidden={actionType===\"insert\"} className=\"mt-1\" variant=\"success\" size=\"sm\" onClick={handleAddColumn}>\r\n                + Add Column\r\n              </Button>\r\n\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleExcelModalClose}>\r\n            Close\r\n          </Button>\r\n          <Button disabled={tableName===\"\"} variant=\"primary\" onClick={handleExcelSubmit}>\r\n            Upload\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n        {/* Schema Manual Modal */}\r\n        <Modal show={showSchemaModal} onHide={handleSchemaModalClose} size=\"lg\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add Schema Manually</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            {/* Table Name Input */}\r\n            <Form.Group controlId=\"formTableName\" className=\"mb-2\">\r\n              <Form.Label>Table Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={tableName}\r\n                onChange={(e) => setTableName(e.target.value)}\r\n                placeholder=\"Enter table name\"\r\n              />\r\n            </Form.Group>\r\n\r\n\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleSchemaModalClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleAddSchema}>\r\n            Save Schema\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Postgres;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const response = await fetch(\"https://bi.meraplion.com/local/create_duckdb_file/\", {","/* eslint-disable */\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport './myvnp.css';\r\nimport { Link, useLocation  } from \"react-router-dom\";\r\nimport FeedbackContext from '../context/FeedbackContext';\r\nimport {\r\n    // ButtonGroup,\r\n    // Modal,\r\n    Button,\r\n    Col,\r\n    Row,\r\n    Container,\r\n    Form,\r\n    Spinner,\r\n    Table,\r\n    ListGroup\r\n} from \"react-bootstrap\";\r\n// import { Table, Spinner } from \"react-bootstrap\";\r\nconst Sql_query = ( {history} ) => {\r\n\r\n  const { get_id, Inserted_at, removeAccents, userLogger, loading, SetLoading, formatDate, alert, alertText, alertType, SetALert, SetALertText, SetALertType } = useContext(FeedbackContext);\r\n\r\n  const fetch_initial_data = async () => {\r\n    SetLoading(true)\r\n    const response = await fetch(`https://bi.meraplion.com/local/get_data/get_tiktok_table_and_schema/`)\r\n    if (!response.ok) {\r\n        SetLoading(false)\r\n    }\r\n    else {\r\n    const data = await response.json()\r\n    set_tables(\r\n    data['rows']\r\n      \r\n    )\r\n    console.log(data);\r\n    SetLoading(false);\r\n\r\n    }\r\n  }\r\n\r\n  const [count, setCount] = useState(0);\r\n  useEffect(() => {\r\n      if (true) {\r\n      const media = window.matchMedia('(max-width: 960px)');\r\n      const isMB = (media.matches);\r\n      const dv_width = window.innerWidth;\r\n      fetch_initial_data();\r\n      } else {\r\n          history.push(`/login?redirect=${location.pathname}`);\r\n      };\r\n  }, [count]);\r\n\r\n  // const [tables, set_tables] = useState([]);\r\n\r\n  // Example table data (replace this with actual fetched data)\r\n  const [tables, set_tables] = useState([\r\n    {\r\n      'table_name': 'sales',\r\n      'schema': {\r\n        'col1': 'TEXT',\r\n        'col2': 'FLOAT',\r\n        'col3': 'time'\r\n      }\r\n    },\r\n    {\r\n      'table_name': 'customer',\r\n      'schema': {\r\n        'id': 'FLOAT',\r\n        'name': 'TEXT',\r\n        'created_at': 'time'\r\n      }\r\n    },\r\n      {\r\n      'table_name': 'video',\r\n      'schema': {\r\n        'id': 'FLOAT',\r\n        'name': 'TEXT',\r\n        'created_at': 'time'\r\n      }\r\n    }\r\n  ]);\r\n\r\n  // States for managing selected file, selected table, query, and result\r\n  const [currentFile, setCurrentFile] = useState(\"\");\r\n  const [selectedTable, setSelectedTable] = useState({});\r\n  const [sqlQuery, setSqlQuery] = useState(\"\");\r\n  const [resultData, setResultData] = useState([]);\r\n  const [excelUrl, setExcelUrl] = useState(\"\");\r\n  const [newDbFile, setNewDbFile] = useState({ name: \"\" });\r\n  const [showtables, setShowtables] = useState(false);  // Toggle for .db files\r\n\r\n  // States for modals\r\n  const [showExcelModal, setShowExcelModal] = useState(false);\r\n  const [showSchemaModal, setShowSchemaModal] = useState(false);\r\n  const [excelFileName, setExcelFileName] = useState(\"\");\r\n  const [tableName, setTableName] = useState(\"\");\r\n  const [schemaColumns, setSchemaColumns] = useState([]);  // Default type is TEXT\r\n  const [excelFile, setExcelFile] = useState(\"\"); // State to store the uploaded Excel file\r\n  const [actionType, setActionType] = useState('create');\r\n  // const [bq_table, set_bq_table] = useState(\"\");\r\n  // const [db_table, set_db_table] = useState(\"\");\r\n  // Handle SQL query input change\r\n  const handleSqlChange = (e) => {\r\n    setSqlQuery(e.target.value);\r\n  };\r\n\r\n  // Handle editing a file (set current file to edit)\r\n  const handleEdit = async (table) => {\r\n    console.log(\"dataTable\", table)\r\n    setCurrentFile(table);\r\n    setSqlQuery(\"\"); // Reset SQL query input\r\n    setSelectedTable(\"\"); // Reset the selected table\r\n    setExcelUrl(\"\"); // Reset the excel URL\r\n\r\n    try {\r\n      // Send POST request with file_path:filename to get tables and schema\r\n      const response = await fetch(\"https://bi.meraplion.com/local/get_pg_tables_and_schemas/\", { \r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          file_path: table.name\r\n        })\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        console.log(\"Fetched Data:\", data);\r\n        setDataTable(data.tabledata);\r\n        setSelectedTable(data.tabledata[0]);\r\n      } else {\r\n        console.error(\"Error fetching tables and schema.\");\r\n        window.alert(\"Failed to fetch tables and schema.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n      window.alert(\"An error occurred while fetching the file details.\");\r\n    }\r\n\r\n        // Focus on the Tables section when a file is selected using the id\r\n        const tablesHeading = document.getElementById(\"tables-heading\");\r\n        if (tablesHeading) {\r\n          tablesHeading.scrollIntoView({ behavior: 'smooth' });\r\n        }\r\n  };\r\n\r\n  // Handle selecting a table\r\n  // const handleTableSelect = (table) => {\r\n  //   console.log(\"handleTableSelect\", table)\r\n  //   setSelectedTable(table);\r\n  // };\r\n\r\n  // Handle running the SQL query\r\n  const handleRunQuery = async () => {\r\n    if (!sqlQuery) {\r\n      window.alert(\"Please enter an SQL query.\");\r\n      return;\r\n    }\r\n\r\n    // Send the SQL query to the backend (this is just an example)\r\n    try {\r\n      const response = await fetch(\"https://bi.meraplion.com/local/get_pg_query_result_tiktok/\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          query: sqlQuery,\r\n        })\r\n      });\r\n\r\n      const data = await response.json();\r\n      setResultData(data.data); // assuming Django returns { data: [...] }\r\n      if (response.ok) {\r\n        // window.alert(\"Thành công !!!\");\r\n        setCount(count+1);\r\n      } else {\r\n        window.alert(data.error_message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error running query:\", error);\r\n      window.alert(error);\r\n    }\r\n\r\n    finally {\r\n      SetLoading(false); // Ensure loading is turned off regardless of success or failure\r\n    }\r\n\r\n    // SetLoading(false);\r\n  };\r\n\r\n  // Modal for adding Excel file and table name\r\n  // const handleExcelModalClose = () => setShowExcelModal(false);\r\n  // const handleExcelModalShow = () => setShowExcelModal(true);\r\n\r\n  // Modal for adding schema manually\r\n  // const handleSchemaModalClose = () => setShowSchemaModal(false);\r\n  // const handleSchemaModalShow = () => setShowSchemaModal(true);\r\n\r\n  // const handleSchemaChange = (index, field, value) => {\r\n  //   const newColumns = [...schemaColumns];\r\n  //   newColumns[index][field] = value;\r\n  //   setSchemaColumns(newColumns);\r\n  // };\r\n\r\n  // const handleAddColumn = () => {\r\n  //   setSchemaColumns([...schemaColumns, { columnName: \"\", dataType: \"FLOAT\", isPrimaryKey: false }]);\r\n  // };\r\n\r\n  // const handleRemoveColumn = (index) => {\r\n  //   const newColumns = schemaColumns.filter((_, i) => i !== index);\r\n  //   setSchemaColumns(newColumns);\r\n  // };\r\n\r\n\r\n    function QueryResultTable({ data, loading }) {\r\n    if (loading) {\r\n      return (\r\n        <div className=\"text-center py-4\">\r\n          <Spinner animation=\"border\" variant=\"primary\" />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (!data || data.length === 0) {\r\n      return <p className=\"text-muted\">No results to display.</p>;\r\n    }\r\n\r\n    const columns = Object.keys(data[0]);\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          maxHeight: \"60vh\",       // limit vertical height\r\n          overflowY: \"auto\",        // vertical scroll\r\n          overflowX: \"auto\",        // horizontal scroll for many columns\r\n          border: \"1px solid #dee2e6\",\r\n          borderRadius: \"8px\",\r\n        }}\r\n      >\r\n        <Table striped bordered hover responsive=\"sm\" className=\"mb-0\">\r\n          <thead className=\"table-light\">\r\n            <tr>\r\n              {columns.map((col) => (\r\n                <th key={col}>{col}</th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.map((row, idx) => (\r\n              <tr key={idx}>\r\n                {columns.map((col) => (\r\n                  <td key={col}>{row[col]}</td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n  <Container className=\"py-0\">\r\n    <div>\r\n      {/* Button to toggle visibility of the .db files table */}\r\n      {/* <Button variant=\"primary\" onClick={toggletablesVisibility} className=\"mt-3\">\r\n        {showtables ? \"Hide Tables\" : \"Show Tables\"}\r\n      </Button> */}\r\n\r\n {/* Row with two columns: Left for .db Files Table, Right for Add .db File Form */}\r\n <Row className=\"\">\r\n\r\n<Col md={6}>\r\n{/* <h4>Available Tables and Schema Preview</h4>     */}\r\n<div \r\n  className=\"d-flex flex-wrap justify-content-between\" \r\n  style={{\r\n    width: '100%',\r\n    margin: '0',\r\n    padding: '0',\r\n    boxSizing: 'border-box',\r\n    overflowX: 'hidden',\r\n    gap: '1rem',\r\n  }}\r\n>\r\n  {tables.map((table, index) => (\r\n    <div\r\n      key={index}\r\n      className=\"p-3 border rounded shadow-sm flex-fill\"\r\n      style={{\r\n        flex: '1 1 calc(33.333% - 1rem)',\r\n        boxSizing: 'border-box',\r\n        minWidth: '0',\r\n      }}\r\n    >\r\n      <h5 className=\"mb-2 text-primary text-truncate\">{table.table_name}</h5>\r\n      <div className=\"schema-preview\">\r\n        {Object.entries(table.schema).map(([columnName, dataType]) => (\r\n          <div\r\n            key={columnName}\r\n            className=\"d-flex justify-content-between text-muted small\"\r\n          >\r\n            <span className=\"fw-bold text-truncate\">{columnName}</span>\r\n            <span className=\"text-monospace text-secondary\">\r\n              ({dataType.toUpperCase()})\r\n            </span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  ))}\r\n</div>\r\n</Col>\r\n\r\n  <Col \r\n    md={6} \r\n    style={{ \r\n      padding: 0, \r\n      margin: 0, \r\n      overflowX: 'hidden', \r\n      boxSizing: 'border-box', \r\n      maxWidth: '100%' \r\n    }}\r\n  >\r\n  <div className=\"\">\r\n    {/* <h4>SQL Query</h4> */}\r\n    <Form>\r\n      <Form.Group controlId=\"formSqlQuery\">\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          rows={5}\r\n          value={sqlQuery}\r\n          onChange={handleSqlChange}\r\n          placeholder=\"Enter your SQL query here\"\r\n          style={{\r\n            height: '214px',\r\n            width: '100%',\r\n            resize: 'none',\r\n            overflow: 'auto',\r\n            boxSizing: 'border-box',\r\n          }}\r\n        />\r\n      </Form.Group>\r\n      <div className=\"d-flex align-items-center mt-3\">\r\n        <Button\r\n          variant=\"success\"\r\n          onClick={handleRunQuery}\r\n          disabled={loading}\r\n        >\r\n          Run Query\r\n        </Button>\r\n      </div>\r\n          </Form>\r\n        </div>\r\n      </Col>\r\n      </Row>\r\n\r\n      <QueryResultTable data={resultData} loading={loading} />\r\n    \r\n    </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Sql_query;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const response = await fetch(\"https://bi.meraplion.com/local/create_duckdb_file/\", {","export default __webpack_public_path__ + \"static/media/profile.64a173b8.jpg\";","export default __webpack_public_path__ + \"static/media/microsofticon.6b1a9283.png\";","// import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Container, Row, Col, Card, Button, ListGroup } from \"react-bootstrap\";\r\nimport profileImage from \"../images/profile.jpg\"; // <-- Replace with your image path\r\nimport microsoft_logo from \"../images/microsofticon.png\"; // <-- Replace with your image path\r\nimport { FaLinkedin, FaGithub, FaYoutube, FaFacebook, FaTiktok, FaUserTie } from \"react-icons/fa\"; // social icons\r\nimport { FaUniversity, FaBrain, FaChalkboardTeacher } from \"react-icons/fa\";\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport './DriveVideoEmbed.css';\r\nfunction HomeScreen() {\r\n  const [activated, setActivated] = useState(false);\r\n  return (\r\n    <Container className=\"py-0\">\r\n      {/* ===== Hero Section ===== */}\r\n      <Row style={{background:\"#0A0A1A\"}} className=\"align-items-center mb-2\">\r\n       \r\n        {/* Text Side */}\r\n        <Col md={7} sm={12} className=\"text-center text-md-start mb-4 mb-md-0\">\r\n          {/* <p className=\"text-uppercase text-muted mb-1 fs-6\">\r\n            Welcome to my world\r\n          </p> */}\r\n          <h1 className=\"fw-bold display-5 mb-3\">\r\n            <span style={{color:\"#00FFFF\"}} > Hi, I'm {\"{DUY VAN}\"}</span>\r\n            <br />\r\n            <span style={{color:\"#00FFFF\"}} >M.Sc. in Data Science</span>\r\n          </h1>\r\n\r\n          <ListGroup variant=\"flush\"  className=\"text-light fs-5 mt-3\">\r\n            <ListGroup.Item  className=\"fs-6 text-light bg-transparent border-0 d-flex align-items-center\">\r\n              <FaUniversity className=\"me-3 text-info fs-4\" />\r\n              M.Sc. in Data Science at LJMU (ENG)\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item className=\"fs-6 text-light bg-transparent border-0 d-flex align-items-center\">\r\n              <FaBrain className=\"me-3 text-warning fs-4\" />\r\n              10 Years of Data Analytics, AI\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item className=\"fs-6 text-light bg-transparent border-0 d-flex align-items-center\">\r\n              <FaUserTie  className=\"me-3 text-success fs-5\" />\r\n              7 Years in Data Manager / Head roles\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item className=\"fs-6 text-light bg-transparent border-0 d-flex align-items-center\">\r\n              <FaChalkboardTeacher className=\"me-3 text-primary fs-4\" />\r\n              3 Years Teaching SQL, Python, Power BI\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n\r\n          {/* Social Media Links */}\r\n          <div className=\"d-flex justify-content-center justify-content-md-start mt-4 mb-4 gap-3\">\r\n            <a\r\n              href=\"https://www.linkedin.com/in/duyvanda/\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              className=\"text-decoration-none text-primary fs-3\"\r\n            >\r\n              <FaLinkedin />\r\n            </a>\r\n            <a\r\n              href=\"https://github.com/duyvanda\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              className=\"text-decoration-none text-primary fs-3\"\r\n            >\r\n              <FaGithub />\r\n            </a>\r\n            <a\r\n              href=\"https://www.youtube.com/@duyvandata\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              className=\"text-decoration-none text-danger fs-3\"\r\n            >\r\n              <FaYoutube />\r\n            </a>\r\n            \r\n            <a\r\n              href=\"https://www.tiktok.com/@duyvanda\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              className=\"text-decoration-none text-danger fs-3\"\r\n            >\r\n              <FaTiktok />\r\n            </a>\r\n\r\n            <a\r\n              href=\"https://www.facebook.com/duyvandata/\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              className=\"text-decoration-none text-danger fs-3\"\r\n            >\r\n              <FaFacebook />\r\n            </a>            \r\n\r\n\r\n          </div>\r\n\r\n          <div className=\"mt-2 mb-2 d-flex gap-2 justify-content-center justify-content-md-start\">\r\n            <Link to=\"/sql_query\">\r\n            <Button variant=\"primary\">\r\n              Học SQL Cơ Bản (FREE)\r\n            </Button>\r\n            </Link>\r\n            \r\n          {/* <Link to=\"/test\">\r\n            <Button variant=\"success\">\r\n              Contact Me\r\n            </Button>\r\n          </Link> */}\r\n          </div>\r\n        </Col>\r\n\r\n       {/* Image Side */}\r\n        <Col md={5} sm={12} className=\"text-center mt-2\">\r\n          <div\r\n            style={{\r\n              overflow: \"hidden\",\r\n              borderRadius: \"50%\",\r\n              width: \"100%\",\r\n              maxWidth: \"400px\",\r\n              aspectRatio: \"1 / 1\",\r\n              margin: \"0 auto\",\r\n              boxShadow: \"0 0 30px rgba(0,0,0,0.1)\",\r\n            }}\r\n          >\r\n            <img\r\n              src={profileImage}\r\n              alt=\"Profile\"\r\n              className=\"img-fluid\"\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                objectFit: \"cover\",\r\n              }}\r\n            />\r\n          </div>\r\n        </Col>\r\n\r\n      </Row>\r\n\r\n    \r\n    <div className=\"custom-video-wrapper\" onClick={() => setActivated(true)} > \r\n      \r\n      {/* 1. Tiêu đề ở trên */}\r\n      \r\n\r\n      <div className=\"video-header-bar\"> {/* Thêm div này cho Header */}\r\n        <div className=\"video-title\">CHÀO MỪNG BẠN !!!</div>\r\n      </div>\r\n\r\n      \r\n\r\n      {/* 2. Container chứa iframe (Đảm bảo responsive) */}\r\n      <div className=\"video-iframe-container\">\r\n        <iframe\r\n          src=\"https://drive.google.com/file/d/10AYAJV0CxzxLQn7Kk-Tak7q5mW3zWSkq/preview?rm=minimal\"\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          title=\"title\"\r\n          frameBorder=\"0\"\r\n          allow=\"autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n          allowFullScreen\r\n        ></iframe>\r\n        <div className=\"custom-logo-overlay\">\r\n          <img src={microsoft_logo} alt=\"Your Logo\" className=\"overlay-logo\" />\r\n        </div>\r\n      </div>\r\n      {/* 3. Thông tin bổ sung ở dưới */}\r\n      <div className=\"video-meta-info\">\r\n        <span className=\"category\">Category</span>\r\n        <span className=\"code\">Code</span>\r\n      </div>\r\n    </div>\r\n\r\n    <div className=\"custom-video-wrapper\"> \r\n      <div className=\"video-header-bar\">\r\n        <div className=\"video-title\">POWER OF DATA !!!</div>\r\n      </div>\r\n      <div className=\"video-iframe-container\">\r\n        <iframe\r\n          src=\"https://drive.google.com/file/d/1L9Q0awq_dLYRDh1pvJuiKJPLpL7V9JtL/preview?rm=minimal\"\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          title=\"title\"\r\n          frameBorder=\"0\"\r\n          allow=\"autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n          allowFullScreen\r\n        ></iframe>\r\n        <div className=\"custom-logo-overlay\">\r\n          <img src={microsoft_logo} alt=\"Your Logo\" className=\"overlay-logo\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"video-meta-info\">\r\n        <span className=\"category\">Category</span>\r\n        <span className=\"code\">Code</span>\r\n      </div>\r\n      </div>\r\n\r\n\r\n\r\n      {/* ===== Services Section ===== */}\r\n      <section>\r\n        <h3 className=\"text-uppercase text-danger fw-bold mb-3 bg-dark \">Features</h3>\r\n        <h2 className=\"fw-bold mb-4 bg-success\">What I Teach</h2>\r\n\r\n        <Row className=\"g-4\">\r\n          <Col md={4}>\r\n            <Card className=\"shadow-sm h-100 text-center border-1\">\r\n              <Card.Body>\r\n                <div className=\"fs-1 mb-3\">🧩</div>\r\n                <Card.Title>SQL</Card.Title>\r\n                <Card.Text>\r\n                  Master data extraction, transformation, and analysis using SQL.\r\n                  From basic SELECTs to complex window functions.\r\n                </Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n\r\n          <Col md={4}>\r\n            <Card className=\"shadow-sm h-100 text-center border-1\">\r\n              <Card.Body>\r\n                <div className=\"fs-1 mb-3\">🐍</div>\r\n                <Card.Title>Python</Card.Title>\r\n                <Card.Text>\r\n                  Learn Python for data analysis, automation, and integrating with SQL databases.\r\n                </Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n\r\n          <Col md={4}>\r\n            <Card className=\"shadow-sm h-100 text-center border-1\">\r\n              <Card.Body>\r\n                <div className=\"fs-1 mb-3\">📊</div>\r\n                <Card.Title>Power BI</Card.Title>\r\n                <Card.Text>\r\n                  Build stunning dashboards and reports to visualize insights from your data.\r\n                </Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </section>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default HomeScreen;\r\n","/* eslint-disable */\r\nimport React from \"react\";\r\n\r\nconst PageNotFound = () => {\r\n    return (\r\n        <div className=\"text-center\">\r\n            <h1>404 ERROR</h1>\r\n            <h1>KHÔNG TÌM THẤY TRANG CỦA BẠN, VUI LÒNG QUAY VỀ TRANG CHỦ</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PageNotFound;","import './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { BrowserRouter as Router, Route, Switch, useLocation } from \"react-router-dom\";\r\nimport template from \"./formcontrol/template\";\r\nimport TemplateSimple from \"./formcontrol/template_simple\";\r\nimport Duckdb from  \"./formcontrol/duckdb\";\r\nimport Test from  \"./formcontrol/test\";\r\nimport Postgres from  \"./formcontrol/postgres\";\r\nimport Sql_query from  \"./formcontrol/sql_query.jsx\";\r\nimport HomeScreen from \"./components/HomeScreen\";\r\nimport PageNotFound from \"./components/404Page.jsx\";\r\nimport { FeedbackProvider } from \"./context/FeedbackContext\";\r\n\r\n\r\nfunction AppContent() {\r\n  // const location = useLocation();\r\n  // const path = location.pathname;\r\n  // const isLogin = path === '/loginabc';\r\n  // const noNavbarPaths = ['/formcontrol/nvbc_introduction', '/formcontrol/nvbc_login', '/formcontrol/nvbc_view_video', '/formcontrol/nvbc_mainpage','/formcontrol/nvbc_view_pdf', '/biagent'];\r\n  // const showNavbar1 = !['/loginabc', ...noNavbarPaths].includes(path);\r\n  // const showNavbar2 = isLogin;\r\n\r\n  return (\r\n    <>\r\n      {/* {showNavbar1 && <Navbar1 />}\r\n      {showNavbar2 && <Navbar_NVBC />} */}\r\n\r\n      <Switch>\r\n          <Route exact path=\"/\" component={HomeScreen} />\r\n          <Route exact path=\"/test\" component={Test} />\r\n          <Route exact path=\"/template\" component={template} />\r\n          <Route exact path=\"/template_simple\" component={TemplateSimple} />\r\n          <Route path=\"/duckdb\" component={Duckdb} />\r\n          <Route path=\"/postgres\" component={Postgres} />\r\n          <Route path=\"/sql_query\" component={Sql_query} />\r\n          <Route component={ PageNotFound } />      \r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <FeedbackProvider>\r\n      {/* <MapProvider> */}\r\n          {/* <MYVNPProvider> */}\r\n            <Router>\r\n              <AppContent />\r\n            </Router>\r\n          {/* </MYVNPProvider> */}\r\n      {/* </MapProvider> */}\r\n    </FeedbackProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nrequire(\"dotenv\").config();\nReactDOM.render(<App />,document.getElementById('root'))\n"],"sourceRoot":""}